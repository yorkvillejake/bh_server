{"version":3,"sources":["assets/img/logo.gif","function.js","query.js","views/Students/index.js","views/Students/add.js","views/Students/edit.js","views/Students/addclass.js","views/Staffs/index.js","views/Staffs/add.js","views/Staffs/edit.js","views/Staffs/schedule.js","views/Classes/index.js","views/Classes/add.js","views/Classes/edit.js","views/Classes/daily.js","components/Others/calendarCell.js","views/Classes/calendar.js","views/Classes/schedule.js","views/Belt/index.js","views/Dashboard/index.js","views/Report/student.js","routes.js","views/Report/staff.js","views/Report/birthday.js","views/Report/contract.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","views/Login/index.js","assets/img/sidebar-5.jpg","layouts/Admin.js","components/Navbars/Navbar.js","views/Home/index.js","views/Select/staff.js","views/Select/student.js","views/Check/staff.js","views/Check/student.js","reportWebVitals.js","index.js"],"names":["getWithExpiry","key","itemStr","localStorage","getItem","item","JSON","parse","Date","getTime","expiry","removeItem","value","setWithExpiry","ttl","setItem","stringify","getMonday","od","d","day","getDay","diff","getDate","setDate","setHours","addDay","n","getMinutes","str","a","split","minutes2TimeString","mins","Math","floor","slice","repeatedArray","re","arr","i","push","lowerBoundIndex","val","comp","length","lo","hi","cur","BASE_URL","URLS","base_url","login","logout","student_add","student_get","student_edit","student_remove","student_getall","staff_getall","staff_get","staff_add","staff_edit","staff_remove","class_getall","class_get","class_add","class_edit","class_remove","schedule_gettoday","schedule_getall","schedule_getbyclass","schedule_getbyinterval","schedule_getbydate","schedule_getbystaff","schedule_get","schedule_add","schedule_edit","schedule_remove","belt_getall","beltgroup_getall","room_getall","location_getall","check_student_add","check_staff_add","check_staff_get","check_student_get","postRequest","url","data","params","headers","Promise","resolve","reject","axios","post","then","respJson","catch","error","postForm","formdata","FormData","append","columns","dataField","text","headerStyle","width","searchable","formatter","cell","row","rowIndex","formatExtraData","src","avatar","alt","className","sort","href","_id","firstname","lastname","pagination","paginationFactory","page","alwaysShowAllBtns","showTotal","withFirstAndLast","SearchBar","Search","Student","props","onAddClick","history","state","list","token_info","include_inactive","token","this","response","success","setState","result","console","log","message","e","students","filter","s","is_active","keyField","search","id","Row","Col","sm","xs","placeholder","searchProps","type","checked","onChange","target","Button","onClick","variant","style","marginLeft","marginRight","baseProps","bootstrap4","bordered","Component","Addstudent","showMessage","msg","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","onCloseClick","goBack","saveCurrent","nexturl","birthday","date_started","started","date_end","endDate","notes","levels","contact_person","contact_email","contact_phone","is_trial","trial_start","trial_end","trial_num_classes","resp","replace","onSaveClick","document","getElementById","checkValidity","preventDefault","onUpdatePhotoClick","click","onImageSelected","image_base64","self","files","reader","FileReader","onload","image_url","readAsDataURL","onLevelChanged","idx","lvl","Object","assign","onAddClassClick","moment","format","belts","beltgroups","all","res1","res2","Container","Form","Card","Header","Title","as","Body","md","Group","Control","required","accept","cols","rows","map","btgrp","name","belt","group","bt","Editstudent","onDeleteClick","confirm_show","handleClose","confirmedDelete","URL","window","location","searchParams","get","attendance","classes","res3","res4","student","att","cl","find","c","class_id","schedules","borderBottom","Modal","show","onHide","closeButton","Footer","weekdays","StudentAddclass","onChecked","schedule_id","cl_idx","findIndex","indexOf","splice","onViewToggle","view_regular","sc","class","is_regular","float","fluid","Accordion","Toggle","textAlign","eventKey","readOnly","Collapse","k","weekday","date","time_start","time_end","is_junior","Staff","Addstaff","Editstaff","onShowSchedule","StaffSchedule","refreshData","staff_id","staffs","st","class_is_active","b","localeCompare","staff_names","j","staff","staff_str","join","onStaffChanged","alignItems","Table","class_name","num_students","Class","onToggleActive","active_only","viewCalendar","toggleViewRegular","class_list","all_classes","addNewClass","ButtonGroup","toggle","ToggleButton","Addclass","is_testing","towards_next","belt_group","data_id","onBeltGroupChanged","beltgroup_id","activebelts","allbelts","resp1","resp2","groups","current_group","Editclass","resp3","rec","DailyClass","onDayChanged","CalendarCell","position","left","top","height","bottom","backgroundColor","date_start","processData","_processOneCluster","nmax_stack","active_ids","delta","p","undefined","processed","randomColor","luminosity","seed","pr","new_actives","max","closeView","onLeftClick","new_date","current_start","onRightClick","onColumnClick","calendarBodyRef","React","createRef","current","scrollTop","styles","btn_nav","arrowLeft","arrowRight","borderRight","fontSize","paddingLeft","display","ref","borderTop","borderLeft","border","padding","flex","justifyContent","Schedule","addNewSession","show_modal","session_room_id","rooms","session_date","session_weekday","session_start","session_end","onMofifyClicked","schedule","session_id","room_id","onAssignClicked","show_assign_modal","session_staffs","onAssignChanged","onDeleteClicked","show_confirm_modal","handleOk","class_is_regular","reload","handleAssign","handleCloseAssignModal","handleCloseConfirm","ret","backdrop","keyboard","room","step","maxHeight","Belt","type_titles","late","wrong","missed","dashboardRoutes","path","icon","component","layout","hidden","additional","ClassCalendar","ClassSchedule","handleClickView","day_start","day_end","filtered","query","createdAt","$gte","toISOString","$lt","add","newstate","gen_student_name","gen_belt","sel_class","gen_class","gen_report_type","report_type","is_late","is_wrong","is_missed","consecutive","gen_consecutive","gen_day_start","gen_day_end","res","handleExport","options","filename","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","csvExporter","ExportToCsv","nd","other","generateCsv","logs","Check","label","Label","textTransform","disabled","min","fetchStaffData","s_id","comp_func","total","interval","total_time","flat","staff_name","gen_total","lg","month","change_year_func","year","ns","set","year_end","concat","class_names","birthday_a","birthday_b","setLoggedIn","useLocation","breadcrumbs","routes","fullpath","pathname","main","path_main","substr","path_add","getBreadcrumbs","Navbar","bg","expand","sticky","documentElement","classList","node","createElement","onclick","parentElement","removeChild","body","appendChild","Breadcrumb","Item","active","aria-controls","Nav","navbar","Dropdown","aria-expanded","aria-haspopup","Link","data-toggle","Menu","aria-labelledby","Sidebar","color","image","data-image","data-color","backgroundImage","require","default","prop","redirect","upgrade","routeName","to","activeClassName","Login","signing","email_sign","password_sign","password","confirm_password","signIn","bind","register","marginTop","withRouter","Admin","getRoutes","exact","render","status","logged_in","sidebarImage","hasImage","mainPanel","scrollingElement","innerWidth","element","parentNode","cur_path","AdminNavbar","MainNavbar","Brand","marginBottom","Home","onChangeLocation","fetchSchedules","loc_id","current_time","locations","timerInterval","setInterval","clearInterval","fontWeight","loc","useState","staffList","setStaffList","useEffect","fetchList","for","firstCharacter","setFirstCharacter","studentList","setStudentList","filteredList","setFilteredList","onChangeFirstCharacter","toUpperCase","info","setInfo","setSchedules","selectedIds","setSelectedIds","start","setStart","stop","setStop","processing","setProcessing","URLSearchParams","has","new_selected","handleCheckboxClicked","works","setTimeout","setSchedule","isWrong","setIsWrong","stud_id","schedule_ids","subscribed_list","fontStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","SelectStaff","SelectStudent","CheckStaff","CheckStudent"],"mappings":"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","file":"static/js/main.5e572777.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1058a708.gif\";","export function getWithExpiry(key) {\r\n\tconst itemStr = localStorage.getItem(key)\r\n\t// if the item doesn't exist, return null\r\n\tif (!itemStr) {\r\n\t\treturn null\r\n\t}\r\n\tconst item = JSON.parse(itemStr)\r\n\tconst now = new Date()\r\n\t// compare the expiry time of the item with the current time\r\n\tif (now.getTime() > item.expiry) {\r\n\t\t// If the item is expired, delete the item from storage\r\n\t\t// and return null\r\n\t\tlocalStorage.removeItem(key)\r\n\t\treturn null\r\n\t}\r\n\treturn item.value\r\n}\r\n\r\nexport function setWithExpiry(key, value, ttl) {\r\n\tconst now = new Date()\r\n\r\n\t// `item` is an object which contains the original value\r\n\t// as well as the time when it's supposed to expire\r\n\tconst item = {\r\n\t\tvalue: value,\r\n\t\texpiry: now.getTime() + ttl,\r\n\t}\r\n\tlocalStorage.setItem(key, JSON.stringify(item))\r\n}\r\n\r\nconst letters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport function genAuthorisationNumber(length) {\r\n  length = length || 6;\r\n  var ret = \"\";\r\n\r\n  for (var i=0; i<length; i++) {\r\n    var r = Math.floor(Math.random()*10000) % 26;\r\n    ret = ret + letters[r];\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport function getMonday(od)\r\n{\r\n\tvar d = new Date(od);\r\n\tvar day = d.getDay();\r\n\tvar diff = d.getDate() - day + (day == 0 ? -6:1);\r\n\td.setDate(diff);\r\n\td.setHours(0, 0, 0);\r\n\treturn d;\r\n}\r\n\r\nexport function addDay(od, n)\r\n{\r\n\tvar d = new Date(od);\r\n\td.setDate(d.getDate() + n);\r\n\treturn d;\r\n}\r\n\r\nexport function getMinutes(str)\r\n{\r\n\tvar a = str.split(':');\r\n\treturn a[0]*60+a[1]*1;\r\n}\r\n\r\nexport function minutes2TimeString(mins) \r\n{\r\n\treturn Math.floor(mins/60)+':'+('00'+(mins%60)).slice(-2);\r\n}\r\n\r\nexport function repeatedArray(re, n)\r\n{\r\n\tvar arr = [];\r\n\tfor (var i=0; i<n; i++)\r\n\t\tarr.push(re);\r\n\treturn arr;\r\n}\r\n\r\nexport function lowerBoundIndex(arr, key, val, comp)\r\n{\r\n\t// assuming arr is sorted by the key in ascending order, and the value is of string\r\n\tif (arr.length === 0) return 0;\r\n\r\n\tlet lo = 0, hi = arr.length;\r\n\twhile (lo < hi - 1) {\r\n\t\tlet cur = Math.floor((lo+hi)/2);\r\n\t\tif (comp(val, arr[cur][key]) > 0) lo = cur;\r\n\t\telse hi = cur;\r\n\t}\r\n\r\n\tif (comp(arr[lo][key], val) >= 0) return lo;\r\n\treturn hi;\r\n}","import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://35.225.204.136'; // 'http://localhost:8080'; // \r\n\r\nexport const URLS = {\r\n  base_url: BASE_URL,\r\n  login: BASE_URL + '/api/login',\r\n  logout: BASE_URL + '/api/logout',\r\n  student_add: BASE_URL + '/api/student/add',\r\n  student_get: BASE_URL + '/api/student/get',\r\n  student_edit: BASE_URL + '/api/student/edit',\r\n  student_remove: BASE_URL + '/api/student/remove',\r\n  student_getall: BASE_URL + '/api/student/getall',\r\n\r\n  staff_getall: BASE_URL + '/api/staff/getall',\r\n  staff_get: BASE_URL + '/api/staff/get',\r\n  staff_add: BASE_URL + '/api/staff/add',\r\n  staff_edit: BASE_URL + '/api/staff/edit',\r\n  staff_remove: BASE_URL + '/api/staff/remove',\r\n\r\n  class_getall: BASE_URL + '/api/class/getall',\r\n  class_get: BASE_URL + '/api/class/get',\r\n  class_add: BASE_URL + '/api/class/add',\r\n  class_edit: BASE_URL + '/api/class/edit',\r\n  class_remove: BASE_URL + '/api/class/remove',\r\n\r\n  schedule_gettoday: BASE_URL + '/api/schedule/gettoday',\r\n  schedule_getall: BASE_URL + '/api/schedule/getall',\r\n  schedule_getbyclass: BASE_URL + '/api/schedule/getbyclass',\r\n  schedule_getbyinterval: BASE_URL + '/api/schedule/getbyinterval',\r\n  schedule_getbydate: BASE_URL + '/api/schedule/getbydate',\r\n  schedule_getbystaff: BASE_URL + '/api/schedule/getbystaff',\r\n  schedule_get: BASE_URL + '/api/schedule/get',\r\n  schedule_add: BASE_URL + '/api/schedule/add',\r\n  schedule_edit: BASE_URL + '/api/schedule/edit',\r\n  schedule_remove: BASE_URL + '/api/schedule/remove',\r\n\r\n  belt_getall: BASE_URL + '/api/belt/getall',\r\n  beltgroup_getall: BASE_URL + '/api/beltgroup/getall',\r\n  room_getall: BASE_URL + '/api/room/getall',\r\n  location_getall: BASE_URL + '/api/location/getall',\r\n\r\n  check_student_add: BASE_URL + '/api/check/student/add',\r\n  check_staff_add: BASE_URL + '/api/check/staff/add',\r\n  check_staff_get: BASE_URL + '/api/check/staff/get',\r\n  check_student_get: BASE_URL + '/api/check/student/get'\r\n}\r\n\r\nexport function getRequest(url, params) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(url, params)\r\n    .then(respJson => {\r\n      resolve(respJson);\r\n    })\r\n    .catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\n\r\nexport function postRequest(url, data, params) {\r\n  params = params || { headers: {\"Content-Type\": 'application/json'}};\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, data, params)\r\n    .then(respJson => {\r\n      resolve(respJson);\r\n    })\r\n    .catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\n\r\nexport function postForm(url, data, params) {\r\n  params = params || { headers: {\"Content-Type\": 'multipart/form-data'}};\r\n  var formdata = new FormData();\r\n  for (var key in data)\r\n  {\r\n    formdata.append(key, data[key]);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, formdata, params)\r\n    .then(respJson => {\r\n      resolve(respJson);\r\n    })\r\n    .catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}","import React, { Component } from \"react\";\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Form,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { getWithExpiry } from \"../../function\";\nimport { URLS, postRequest } from \"../../query\";\n\nconst columns = [{\n  dataField: 'avatar',\n  text: '',\n  headerStyle: { width: 56 },\n  searchable: false,\n  formatter: function callback(cell, row, rowIndex, formatExtraData) {\n    return <img src={URLS.base_url + row.avatar} alt='' className='student_avatar_in_table' />\n  }\n}, {\n  dataField: 'firstname',\n  text: 'Name',\n  sort: true,\n  formatter: function callback(cell, row, rowIndex, formatExtraData) {\n    return <a href={'/admin/students/edit?id=' + row._id}>{row.firstname} {row.lastname}</a>\n  }\n}, {\n  dataField: 'belts',\n  text: 'Belt',\n  searchable: false\n}, {\n  dataField: 'class_names',\n  text: 'Classes',\n  searchable: false\n}];\nconst pagination = paginationFactory({\n  page: 1,\n  alwaysShowAllBtns: true,\n  showTotal: true,\n  withFirstAndLast: true,\n})\nconst { SearchBar } = Search;\n\nclass Student extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      list: [],\n      token_info: getWithExpiry('token_info'),\n      include_inactive: false\n    }\n  }\n\n  componentDidMount()\n  {\n    postRequest(URLS.student_getall, { token: this.state.token_info })\n    .then(response => {\n      if (response.data.success)\n      {\n        this.setState({ list: response.data.result });\n      } else {\n        console.log(response.data.message);\n      }\n    }).catch(e => {\n      console.log(e);\n    })\n  }\n\n  onAddClick = () => {\n    this.props.history.push('/admin/students/add');\n  };\n\n  render()\n  {\n    var students = this.state.list;\n    if (!this.state.include_inactive)\n    {\n      students = students.filter(s => s.is_active );\n    }\n\n    return (\n      <>\n      <ToolkitProvider keyField='_id' data={ students } columns={ columns } search>\n        {\n          props => (\n            <div className=\"py-4\">\n              <div\n                id=\"datatable-basic_filter\"\n                className=\"dataTables_filter px-4 pb-1 \"\n              >\n                <Row>\n                  <Col sm={5} xs={12} className='horizontal-centering-container mb-2'>\n                    <label>\n                      Name starts with:&nbsp;&nbsp;\n                    </label>\n                    <SearchBar\n                        className=\"form-control-sm\"\n                        placeholder=\"\"\n                        {...props.searchProps}\n                      />\n                  </Col>\n                  <Col sm={4} xs={12} className='horizontal-centering-container mb-2'>\n                    <input type='checkbox' className='mb-2' checked={this.state.include_inactive} onChange={e => this.setState({ include_inactive: e.target.checked})} />\n                    <label>&nbsp;Include inactive</label>\n                  </Col>\n                  <Col sm={3} xs={12} className='horizontal-centering-container mb-2'>\n                    <Button onClick={this.onAddClick} variant='secondary' style={{ marginLeft: 'auto', marginRight: 0 }}>Add a student</Button>\n                  </Col>\n                </Row>\n              </div>\n              <BootstrapTable\n                {...props.baseProps}\n                bootstrap4={true}\n                pagination={pagination}\n                bordered={false}\n              />\n            </div>\n          )\n        }\n      </ToolkitProvider>\n      </>\n    );\n  }\n}\n\nexport default Student;\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { getWithExpiry, repeatedArray } from '../../function';\r\nimport { postRequest, postForm, URLS } from \"../../query\";\r\n\r\nclass Addstudent extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      firstname: '',\r\n      lastname: '',\r\n      birthday: moment().format(\"YYYY-MM-DD\"),\r\n      started: moment().format(\"YYYY-MM-DD\"),\r\n      endDate: moment().format(\"YYYY-MM-DD\"),\r\n      is_active: false,\r\n      avatar: '',\r\n      image_url: '',\r\n      contact_person: \"\",\r\n      contact_email: '',\r\n      contact_phone: '',\r\n      is_trial: false,\r\n      trial_start: moment().format(\"YYYY-MM-DD\"),\r\n      trial_end: moment().format(\"YYYY-MM-DD\"),\r\n      trial_num_classes: 0,\r\n      levels: [],\r\n      notes: '',\r\n\r\n      token_info: getWithExpiry('token_info'),\r\n      belts: [],\r\n      beltgroups: []\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    Promise.all([postRequest(URLS.belt_getall), postRequest(URLS.beltgroup_getall)])\r\n    .then(([res1, res2]) => {\r\n      var belts = [];\r\n      var beltgroups = [];\r\n\r\n      if (res1.data.success) {\r\n        belts = res1.data.result;\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res1.data.message);\r\n      }\r\n      if (res2.data.success) {\r\n        beltgroups = res2.data.result;\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res2.data.message);\r\n      }\r\n\r\n      this.setState({ belts, beltgroups, levels: repeatedArray(\"\", beltgroups.length)});\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  saveCurrent = (nexturl) => {\r\n    postForm(URLS.student_add, {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      birthday: this.state.birthday,\r\n      date_started: this.state.started,\r\n      date_end: this.state.endDate,\r\n      is_active: this.state.is_active,\r\n      avatar: this.state.avatar,\r\n      notes: this.state.notes,\r\n      levels: this.state.levels,\r\n      contact_person: this.state.contact_person,\r\n      contact_email: this.state.contact_email,\r\n      contact_phone: this.state.contact_phone,\r\n      is_trial: this.state.is_trial,\r\n      trial_start: this.state.trial_start,\r\n      trial_end: this.state.trial_end,\r\n      trial_num_classes: this.state.trial_num_classes,\r\n      token: this.state.token_info,\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        if (nexturl) this.props.history.replace(nexturl);\r\n        else this.props.history.goBack();\r\n      }\r\n      else {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save')\r\n    });\r\n  }\r\n\r\n  onSaveClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent();\r\n  }\r\n\r\n  onUpdatePhotoClick = () => {\r\n    document.getElementById('image-file').click();\r\n  }\r\n\r\n  onImageSelected = (e) => {\r\n    var self = this;\r\n    var files = e.target.files;\r\n    var image_base64;\r\n    var reader = new FileReader(); \r\n    reader.onload = (re) => {\r\n      image_base64 = re.target.result;\r\n      self.setState({ avatar: files[0], image_url: image_base64 });\r\n    };\r\n\r\n    reader.readAsDataURL(files[0]);\r\n  }\r\n\r\n  onLevelChanged = (idx, lvl) => {\r\n    var levels = Object.assign([], this.state.levels);\r\n    levels[idx] = lvl;\r\n    this.setState({ levels });\r\n  }\r\n\r\n  onAddClassClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent('/admin/students/addclass?id='+this.state._id);\r\n  }\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Form id='form'>\r\n          <Row>\r\n            <Col sm={8} xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title as=\"h4\">Add a student</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <Form.Group>\r\n                        <label>First Name</label>\r\n                        <Form.Control\r\n                          placeholder=\"First Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.firstname}\r\n                          onChange={e => this.setState({ firstname: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Form.Group>\r\n                        <label>Last Name</label>\r\n                        <Form.Control\r\n                          placeholder=\"Last Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.lastname}\r\n                          onChange={e => this.setState({ lastname: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <Form.Group>\r\n                        <label>Birthday</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.birthday} required onChange={e => this.setState({ birthday: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                        <label>Date Started</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.started} onChange={e => this.setState({ started: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                        <label>Contract End Date</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.endDate} onChange={e => this.setState({ endDate: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_active} onChange={e => this.setState({ is_active: e.target.checked })} />\r\n                        <label>Is active?</label>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Card className=\"card-user\">\r\n                        <div className=\"card-body vertical-centering-container\">\r\n                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()} className='mt-3'>\r\n                          <img\r\n                            alt=\"\"\r\n                            src={this.state.image_url}\r\n                            className=\"student_avatar border-gray\"\r\n                          ></img>\r\n                        </a>\r\n                        <input type='file' className='hidden' id='image-file' accept=\"image/*\" onChange={this.onImageSelected} />\r\n                        <Button variant='outline-secondary' onClick={this.onUpdatePhotoClick} className='mt-auto mb-3'>Update Photo</Button>\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <label>Contact Person</label>\r\n                      <Form.Control\r\n                        placeholder=\"Contact Person\"\r\n                        type=\"text\"\r\n                        value={this.state.contact_person}\r\n                        onChange={e => this.setState({ contact_person: e.target.value })}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <label>Contact Email</label>\r\n                      <Form.Control\r\n                        placeholder=\"Contact Email\"\r\n                        type=\"email\"\r\n                        value={this.state.contact_email}\r\n                        onChange={e => this.setState({ contact_email: e.target.value })}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <label>Contact Phone</label>\r\n                      <Form.Control\r\n                        placeholder=\"Contact Phone\"\r\n                        type=\"phone\"\r\n                        value={this.state.contact_phone}\r\n                        onChange={e => this.setState({ contact_phone: e.target.value })}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-1 pt-4\" md=\"4\">\r\n                      <label>Current Class(es):</label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\" className=\"mt-2\">\r\n                      <Form.Group>\r\n                        <label>Notes</label>\r\n                        <Form.Control\r\n                          cols=\"80\"\r\n                          placeholder=\"Please add notes...\"\r\n                          rows=\"4\"\r\n                          as=\"textarea\"\r\n                          value={this.state.notes}\r\n                          onChange={e => this.setState({ notes: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={4} xs={12}>\r\n              <Card className=\"card-user\">\r\n                <Card.Header>\r\n                  Which martial arts is this student studying?\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {\r\n                    this.state.beltgroups.map((btgrp, idx) => (\r\n                      <Form.Group key={btgrp._id}>\r\n                        <label>{btgrp.name}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={this.state.levels[idx]}\r\n                          onChange={e => this.onLevelChanged(idx, e.target.value)}\r\n                        >\r\n                          <option value=''>None</option>\r\n                          { this.state.belts.filter(belt => belt.group == btgrp._id).map(bt => (\r\n                            <option key={bt._id} value={bt._id}>{bt.name}</option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    ))\r\n                  }\r\n\r\n                  <div className='vertical-centering-container full-width'>\r\n                    {/* <Button variant='light' className='float-center'>Manage type of class</Button> */}\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"card-user\">\r\n                <Card.Header>\r\n                  Trial Student\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form.Group>\r\n                    <div className='horizontal-centering-container'>\r\n                      <label>Is this a trial?</label>\r\n                      <input type='checkbox' className='ml-2 mb-2' checked={this.state.is_trial} onChange={e => this.setState({ is_trial: e.target.checked })} />\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label>Starts</label>\r\n                    <div className='full-width'>\r\n                      <Form.Control type=\"date\" value={this.state.trial_start} onChange={e => this.setState({ trial_start: e.target.value })}>\r\n                      </Form.Control>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label>Ends</label>\r\n                    <div className='full-width'>\r\n                      <Form.Control type=\"date\" value={this.state.trial_end} onChange={e => this.setState({ trial_end: e.target.value })}>\r\n                      </Form.Control>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label># Classes</label>\r\n                    <Form.Control\r\n                      value={this.state.trial_num_classes}\r\n                      placeholder=\"\"\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ trial_num_classes: e.target.value })}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={this.onSaveClick} className=\"btn-fill float-right ml-auto mr-1\" type=\"submit\" variant=\"info\" id='btn-submit'>Save</Button>\r\n            {/* <Button onClick={this.onNotesClick} className=\"float-right mr-1\" variant=\"light\">Notes</Button> */}\r\n            <Button onClick={this.onAddClassClick} className=\"float-right mr-1\" variant=\"outline-secondary\" type='submit'>Add a class</Button>\r\n            {/* <Button onClick={this.onDeleteClick} className=\"float-right mr-1\" variant=\"danger\">Delete</Button> */}\r\n            <Button onClick={this.onCloseClick} className=\"float-right\" variant=\"outline-secondary\">Close this view</Button>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Addstudent;\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { getWithExpiry, repeatedArray } from '../../function';\r\nimport { postRequest, postForm, URLS } from \"../../query\";\r\n\r\nclass Editstudent extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      _id: url.searchParams.get('id'),\r\n      firstname: '',\r\n      lastname: '',\r\n      birthday: moment().format(\"YYYY-MM-DD\"),\r\n      started: moment().format(\"YYYY-MM-DD\"),\r\n      endDate: moment().format(\"YYYY-MM-DD\"),\r\n      is_active: false,\r\n      avatar: '',\r\n      image_url: '',\r\n      contact_person: \"\",\r\n      contact_email: '',\r\n      contact_phone: '',\r\n      is_trial: false,\r\n      trial_start: moment().format(\"YYYY-MM-DD\"),\r\n      trial_end: moment().format(\"YYYY-MM-DD\"),\r\n      trial_num_classes: 0,\r\n      levels: [],\r\n      notes: '',\r\n      attendance: [],\r\n\r\n      token_info: getWithExpiry('token_info'),\r\n      belts: [],\r\n      beltgroups: [],\r\n      classes: [],\r\n      confirm_show: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    Promise.all([postRequest(URLS.belt_getall), postRequest(URLS.beltgroup_getall),\r\n                postRequest(URLS.student_get, { token: this.state.token_info, _id: this.state._id }),\r\n                postRequest(URLS.class_getall, { token: this.state.token_info })])\r\n    .then(([res1, res2, res3, res4]) => {\r\n      var belts = [];\r\n      var beltgroups = [];\r\n      var classes = [];\r\n      var student = {};\r\n\r\n      if (res1.data.success) {\r\n        belts = res1.data.result;\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res1.data.message);\r\n      }\r\n      if (res2.data.success) {\r\n        beltgroups = res2.data.result;\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res2.data.message);\r\n      }\r\n      if (res3.data.success)\r\n      {\r\n        var data = res3.data.result;\r\n        student = {\r\n          firstname: data.firstname,\r\n          lastname: data.lastname,\r\n          birthday: moment(data.birthday).format(\"YYYY-MM-DD\"),\r\n          started: moment(data.date_started).format(\"YYYY-MM-DD\"),\r\n          endDate: moment(data.date_end).format(\"YYYY-MM-DD\"),\r\n          is_active: data.is_active,\r\n          avatar: data.avatar,\r\n          image_url: URLS.base_url + data.avatar,\r\n          contact_person: data.contact_person,\r\n          contact_email: data.contact_email,\r\n          contact_phone: data.contact_phone,\r\n          is_trial: data.is_trial,\r\n          trial_start: moment(data.trial_start).format(\"YYYY-MM-DD\"),\r\n          trial_end: moment(data.trial_end).format(\"YYYY-MM-DD\"),\r\n          trial_num_classes: data.trial_num_classes,\r\n          levels: data.levels,\r\n          notes: data.notes,\r\n          attendance: data.attendance || [],\r\n        };\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res3.data.message);\r\n      }\r\n      if (res4.data.success)\r\n      {\r\n        classes = res4.data.result;\r\n      }\r\n      this.setState({ belts, beltgroups, ...student, classes });\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  saveCurrent = (nexturl) => {\r\n    postForm(URLS.student_edit, {\r\n      _id: this.state._id,\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      birthday: this.state.birthday,\r\n      date_started: this.state.started,\r\n      date_end: this.state.endDate,\r\n      is_active: this.state.is_active,\r\n      avatar: this.state.avatar,\r\n      notes: this.state.notes,\r\n      levels: this.state.levels,\r\n      contact_person: this.state.contact_person,\r\n      contact_email: this.state.contact_email,\r\n      contact_phone: this.state.contact_phone,\r\n      is_trial: this.state.is_trial,\r\n      trial_start: this.state.trial_start,\r\n      trial_end: this.state.trial_end,\r\n      trial_num_classes: this.state.trial_num_classes,\r\n      token: this.state.token_info,\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        if (nexturl) this.props.history.push(nexturl);\r\n        else this.props.history.goBack();\r\n      }\r\n      else {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save')\r\n    });\r\n  }\r\n\r\n  onSaveClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent();\r\n  }\r\n\r\n  onUpdatePhotoClick = () => {\r\n    document.getElementById('image-file').click();\r\n  }\r\n\r\n  onImageSelected = (e) => {\r\n    var self = this;\r\n    var files = e.target.files;\r\n    var image_base64;\r\n    var reader = new FileReader(); \r\n    reader.onload = (re) => {\r\n      image_base64 = re.target.result;\r\n      self.setState({ avatar: files[0], image_url: image_base64 });\r\n    };\r\n\r\n    reader.readAsDataURL(files[0]);\r\n  }\r\n\r\n  onLevelChanged = (idx, lvl) => {\r\n    var levels = Object.assign([], this.state.levels);\r\n    levels[idx] = lvl;\r\n    this.setState({ levels });\r\n  }\r\n\r\n  onAddClassClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent('/admin/students/addclass?id='+this.state._id);\r\n  }\r\n\r\n  onDeleteClick = () => {\r\n    this.setState({ confirm_show: true });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ confirm_show: false });\r\n  }\r\n\r\n  confirmedDelete = () => {\r\n    postRequest(URLS.student_remove, { _id: this.state._id, token: this.state.token_info })\r\n    .then(resp => {\r\n      if (resp.data.success) {\r\n        this.props.history.goBack();\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to delete this student');\r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Form id='form'>\r\n          <Row>\r\n            <Col sm={8} xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title as=\"h4\">Edit a student</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <Form.Group>\r\n                        <label>First Name</label>\r\n                        <Form.Control\r\n                          placeholder=\"First Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.firstname}\r\n                          onChange={e => this.setState({ firstname: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Form.Group>\r\n                        <label>Last Name</label>\r\n                        <Form.Control\r\n                          placeholder=\"Last Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.lastname}\r\n                          onChange={e => this.setState({ lastname: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <Form.Group>\r\n                        <label>Birthday</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.birthday} required onChange={e => this.setState({ birthday: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                        <label>Date Started</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.started} onChange={e => this.setState({ started: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                        <label>Contract End Date</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.endDate} onChange={e => this.setState({ endDate: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_active} onChange={e => this.setState({ is_active: e.target.checked })} />\r\n                        <label>Is active?</label>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Card className=\"card-user\">\r\n                        <div className=\"card-body vertical-centering-container\">\r\n                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()} className='mt-3'>\r\n                          <img\r\n                            alt=\"\"\r\n                            src={this.state.image_url}\r\n                            className=\"student_avatar border-gray\"\r\n                          ></img>\r\n                        </a>\r\n                        <input type='file' className='hidden' id='image-file' accept=\"image/*\" onChange={this.onImageSelected} />\r\n                        <Button variant='outline-secondary' onClick={this.onUpdatePhotoClick} className='mt-auto mb-3'>Update Photo</Button>\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <label>Contact Person</label>\r\n                      <Form.Control\r\n                        placeholder=\"Contact Person\"\r\n                        type=\"text\"\r\n                        value={this.state.contact_person}\r\n                        onChange={e => this.setState({ contact_person: e.target.value })}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <label>Contact Email</label>\r\n                      <Form.Control\r\n                        placeholder=\"Contact Email\"\r\n                        type=\"email\"\r\n                        value={this.state.contact_email}\r\n                        onChange={e => this.setState({ contact_email: e.target.value })}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <label>Contact Phone</label>\r\n                      <Form.Control\r\n                        placeholder=\"Contact Phone\"\r\n                        type=\"phone\"\r\n                        value={this.state.contact_phone}\r\n                        onChange={e => this.setState({ contact_phone: e.target.value })}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-1 pt-4\" md=\"4\">\r\n                      <label>Current Class(es):</label>\r\n                      {\r\n                        this.state.attendance.map(att => {\r\n                          var cl = this.state.classes.find(c => c._id == att.class_id);\r\n                          if (!cl || !att.schedules.length) return null;\r\n                          // <Col>\r\n                          return (\r\n                            <div key={cl._id} style={{ borderBottom: '1px solid #ccc'}}>\r\n                            <a href={'/admin/class/edit?id=' + att.class_id}>\r\n                              { cl.name }\r\n                            </a>\r\n                            </div>\r\n                          // </Col>\r\n                          )\r\n                        })\r\n                      }\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\" className=\"mt-2\">\r\n                      <Form.Group>\r\n                        <label>Notes</label>\r\n                        <Form.Control\r\n                          cols=\"80\"\r\n                          placeholder=\"Please add notes...\"\r\n                          rows=\"4\"\r\n                          as=\"textarea\"\r\n                          value={this.state.notes}\r\n                          onChange={e => this.setState({ notes: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={4} xs={12}>\r\n              <Card className=\"card-user\">\r\n                <Card.Header>\r\n                  Which martial arts is this student studying?\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {\r\n                    this.state.beltgroups.map((btgrp, idx) => (\r\n                      <Form.Group key={btgrp._id}>\r\n                        <label>{btgrp.name}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={this.state.levels[idx]}\r\n                          onChange={e => this.onLevelChanged(idx, e.target.value)}\r\n                        >\r\n                          <option value=''>None</option>\r\n                          { this.state.belts.filter(belt => belt.group == btgrp._id).map(bt => (\r\n                            <option key={bt._id} value={bt._id}>{bt.name}</option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    ))\r\n                  }\r\n\r\n                  <div className='vertical-centering-container full-width'>\r\n                    {/* <Button variant='light' className='float-center'>Manage type of class</Button> */}\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"card-user\">\r\n                <Card.Header>\r\n                  Trial Student\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form.Group>\r\n                    <div className='horizontal-centering-container'>\r\n                      <label>Is this a trial?</label>\r\n                      <input type='checkbox' className='ml-2 mb-2' checked={this.state.is_trial} onChange={e => this.setState({ is_trial: e.target.checked })} />\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label>Starts</label>\r\n                    <div className='full-width'>\r\n                      <Form.Control type=\"date\" value={this.state.trial_start} onChange={e => this.setState({ trial_start: e.target.value })}>\r\n                      </Form.Control>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label>Ends</label>\r\n                    <div className='full-width'>\r\n                      <Form.Control type=\"date\" value={this.state.trial_end} onChange={e => this.setState({ trial_end: e.target.value })}>\r\n                      </Form.Control>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label># Classes</label>\r\n                    <Form.Control\r\n                      value={this.state.trial_num_classes}\r\n                      placeholder=\"\"\r\n                      type=\"text\"\r\n                      onChange={e => this.setState({ trial_num_classes: e.target.value })}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={this.onSaveClick} className=\"btn-fill float-right ml-auto mr-1\" type=\"submit\" variant=\"info\" id='btn-submit'>Save</Button>\r\n            {/* <Button onClick={this.onNotesClick} className=\"float-right mr-1\" variant=\"light\">Notes</Button> */}\r\n            <Button onClick={this.onAddClassClick} className=\"float-right mr-1\" variant=\"outline-secondary\" type='submit'>Add a class</Button>\r\n            <Button onClick={this.onDeleteClick} className=\"float-right mr-1\" variant=\"danger\">Delete</Button>\r\n            <Button onClick={this.onCloseClick} className=\"float-right\" variant=\"outline-secondary\">Close this view</Button>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      <Modal show={this.state.confirm_show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Warning</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure to remove this student?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={this.confirmedDelete}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Editstudent;\r\n","import React, { Component } from 'react';\r\nimport { store } from 'react-notifications-component';\r\nimport moment from 'moment';\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Form,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport { URLS, postRequest, postForm } from '../../query';\r\nimport { getWithExpiry } from '../../function';\r\nconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nclass StudentAddclass extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      _id: url.searchParams.get('id'),\r\n      token_info: getWithExpiry('token_info'),\r\n      classes: [],\r\n      student: {},\r\n      attendance: [],\r\n\r\n      view_regular: true\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    Promise.all([postRequest(URLS.schedule_getall, { token: this.state.token_info }),\r\n                postRequest(URLS.student_get, { _id: this.state._id, token: this.state.token_info })])\r\n    .then(([res1, res2]) => {\r\n      var classes = [];\r\n      var student = {};\r\n\r\n      if (res1.data.success)\r\n      {\r\n        classes = res1.data.result;\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res1.data.message);\r\n      }\r\n      if (res2.data.success) {\r\n        student = res2.data.result;\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res2.data.message);\r\n      }\r\n      this.setState({ classes, student, attendance: student.attendance || [] });\r\n    }).catch(e => {\r\n      console.log('Failed to fetch data');\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveClick = () => {\r\n    postForm(URLS.student_edit, \r\n    { \r\n      _id: this.state._id, \r\n      token: this.state.token_info,\r\n      attendance: JSON.stringify(this.state.attendance)\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        this.props.history.goBack();\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save');\r\n    })\r\n  }\r\n\r\n  onChecked = (class_id, schedule_id, checked) => {\r\n    var attendance = Object.assign([], this.state.attendance);\r\n    var cl_idx = attendance.findIndex(cl => cl.class_id == class_id);\r\n    if (cl_idx < 0) {\r\n      if (!checked) return;\r\n      attendance.push({ class_id, schedules: []});\r\n      cl_idx = attendance.length - 1;\r\n    }\r\n    var schedules = Object.assign([], attendance[cl_idx].schedules);\r\n    if (checked && schedules.indexOf(schedule_id) == -1)\r\n    {\r\n      schedules.push(schedule_id);\r\n    }\r\n    else if (!checked && schedules.indexOf(schedule_id) != -1)\r\n    {\r\n      schedules.splice(schedules.indexOf(schedule_id), 1);\r\n    }\r\n\r\n    if (schedules.length == 0)\r\n    {\r\n      attendance.splice(cl_idx, 1);\r\n    }\r\n    else\r\n    {\r\n      attendance[cl_idx] = { \r\n        class_id,\r\n        schedules\r\n      }\r\n    }\r\n    this.setState({ attendance });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  onViewToggle = () => {\r\n    this.setState({ view_regular: !this.state.view_regular });\r\n  }\r\n\r\n  render()\r\n  {\r\n    var classes = this.state.classes.filter(sc => sc.class[0] && sc.class[0].is_regular == this.state.view_regular && sc.class[0].is_active);\r\n    return (\r\n      <>\r\n        <div className='horizontal-centering-container pl-3 pr-3 mb-4'>\r\n          <div className=''>\r\n            Select { this.state.view_regular ? 'regular/weekly' : 'special'} class schedules for {this.state.student.firstname + ' ' + this.state.student.lastname}\r\n          </div>\r\n          <div className='horizontal-centering-container' style={{ marginLeft: 'auto', marginRight: 0 }}>\r\n            <Button onClick={this.onSaveClick} variant='secondary' className='btn-fill mr-2' style={{ float: 'right' }}>Save</Button>\r\n            <Button onClick={this.onCloseClick} variant='outline-secondary' className='mr-2' style={{ float: 'right' }}>Close View</Button>\r\n            <Button onClick={this.onViewToggle} variant='outline-secondary' style={{ float: 'right' }}>\r\n              { this.state.view_regular ? 'View special classes' : 'View regular classes' }\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Container fluid>\r\n        {\r\n          classes.length ? classes.map((cl, key) => (\r\n            <Accordion key={cl._id}>\r\n              <Card className='mb-0'>\r\n                <Card.Header className='pt-0 px-0'>\r\n                  <Accordion.Toggle as={Button} className='full-width' style={{ textAlign: 'left' }} variant=\"link\" eventKey={cl._id}>\r\n                    <input type='checkbox' className='mb-2 mr-2' \r\n                      checked={!!this.state.attendance.find(c => c.class_id == cl._id)}\r\n                      readOnly/>\r\n                    {cl.class[0].name}\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                  \r\n                <Accordion.Collapse eventKey={cl._id}>\r\n                  <Card.Body>\r\n                    {\r\n                      cl.schedules.length ? cl.schedules.map((sc, k) => {\r\n                        if (sc.is_regular != cl.class[0].is_regular) return null;\r\n                        var att = this.state.attendance.find(a => a.class_id == cl._id);\r\n                        return (\r\n                        <Form.Group className='horizontal-centering-container my-1' key={sc._id}>\r\n                          <input type='checkbox' className='mb-2 mr-2' \r\n                          checked={!!att && att.schedules.indexOf(sc._id) != -1}\r\n                          onChange={e => this.onChecked(cl._id, sc._id, e.target.checked)}/>\r\n                          <label>\r\n                            <span style={{ width: 120, float: 'left' }}>{ sc.is_regular ? weekdays[sc.weekday] : moment(sc.date).format('YYYY-MM-DD')}</span>\r\n                            <span>{sc.time_start} - {sc.time_end}</span>\r\n                          </label>\r\n                        </Form.Group>\r\n                        )\r\n                      }) : 'No schedules'\r\n                    }\r\n                  </Card.Body>\r\n                  \r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          )) : <div className='ml-4'>No classes</div>\r\n        }\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StudentAddclass;","import React, { Component } from \"react\";\nimport moment from 'moment';\nimport { Button } from \"react-bootstrap\";\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { getWithExpiry } from \"../../function\";\nimport { URLS, postRequest } from \"../../query\";\n\nconst columns = [{\n  dataField: 'name',\n  text: 'Name',\n}, {\n  dataField: 'birthday',\n  text: 'Birthday',\n  formatter: function callback(cell, row, rowIndex, formatExtraData) {\n    return moment(row.birthday).format('MM/DD/yyyy');\n  }\n}, {\n  dataField: 'is_active',\n  text: 'Is Active?',\n  formatter: function callback(cell, row, rowIndex, formatExtraData) {\n    return <input type='checkbox' checked={row.is_active} readOnly/>\n  }\n}, {\n  dataField: 'is_junior',\n  text: 'Junior Leader?',\n  formatter: function callback(cell, row, rowIndex, formatExtraData) {\n    return <input type='checkbox' checked={row.is_junior} readOnly/>\n  }\n}, {\n  dataField: '',\n  text: '',\n  formatter: function callback(cell, row, rowIndex, formatExtraData) {\n    return <a href={'/admin/staff/edit?id=' + row._id}>View Details</a>\n  }\n}];\nconst pagination = paginationFactory({\n  page: 1,\n  alwaysShowAllBtns: true,\n  showTotal: true,\n  withFirstAndLast: true,\n})\n\nclass Staff extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      list: [],\n      token_info: getWithExpiry('token_info'),\n    }\n  }\n\n  componentDidMount()\n  {\n    postRequest(URLS.staff_getall, { token: this.state.token_info })\n    .then(response => {\n      if (response.data.success)\n      {\n        this.setState({ list: response.data.result });\n      } else {\n        console.log(response.data.message);\n      }\n    }).catch(e => {\n      console.log(e);\n    })\n  }\n\n  onAddClick = () => {\n    this.props.history.push('/admin/staff/add');\n  };\n\n  render()\n  {\n    return (\n      <>\n        <Button onClick={this.onAddClick} variant='outline-secondary' className='mb-2' style={{ float: 'right' }}>Add a staff member</Button>\n        <BootstrapTable\n          keyField='_id'\n          data={this.state.list}\n          columns={columns}\n          pagination={pagination}\n          bordered={false}\n        />\n      </>\n    );\n  }\n}\n\nexport default Staff;\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n// react-bootstrap components\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from \"../../function\";\r\n\r\nclass Addstaff extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      birthday: moment().format('YYYY-MM-DD'),\r\n      is_active: false,\r\n      is_junior: false,\r\n      notes: '',\r\n      token_info: getWithExpiry('token_info')\r\n    }\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  onSaveClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    postRequest(URLS.staff_add, {\r\n      name: this.state.name,\r\n      birthday: this.state.birthday,\r\n      is_active: this.state.is_active,\r\n      is_junior: this.state.is_junior,\r\n      notes: this.state.notes,\r\n      token: this.state.token_info\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        this.props.history.goBack();\r\n      }\r\n      else {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save')\r\n    });\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Form id='form'>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title as=\"h4\">Add a staff member</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <label>Name</label>\r\n                        <Form.Control\r\n                          placeholder=\"Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.name}\r\n                          onChange={e => this.setState({ name: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <label>Birthday</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.birthday} required onChange={e => this.setState({ birthday: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container mt-4'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_active} onChange={e => this.setState({ is_active: e.target.checked })} />\r\n                        <label>Is this staff member active?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_junior} onChange={e => this.setState({ is_junior: e.target.checked })} />\r\n                        <label>Is this a Junior Leader?</label>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\" className=\"mt-2\">\r\n                      <Form.Group>\r\n                        <label>Notes</label>\r\n                        <Form.Control\r\n                          cols=\"80\"\r\n                          placeholder=\"Please add notes...\"\r\n                          rows=\"4\"\r\n                          as=\"textarea\"\r\n                          value={this.state.notes}\r\n                          onChange={e => this.setState({ notes: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={this.onSaveClick} className=\"btn-fill float-right ml-auto mr-1\" type=\"submit\" variant=\"info\" id='btn-submit'>Save</Button>\r\n            {/* <Button onClick={this.onNotesClick} className=\"float-right mr-1\" variant=\"light\">Notes</Button> */}\r\n            {/* <Button onClick={this.onShowSchedule} className=\"float-right mr-1\" variant=\"light\">Show Schedule</Button> */}\r\n            {/* <Button onClick={this.onDeleteClick} className=\"float-right mr-1\" variant=\"danger\">Delete</Button> */}\r\n            <Button onClick={this.onCloseClick} className=\"float-right\" variant=\"outline-secondary\">Close this view</Button>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Addstaff;\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from \"../../function\";\r\n\r\nclass Editstaff extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      _id: url.searchParams.get('id'),\r\n      name: '',\r\n      birthday: moment().format('YYYY-MM-DD'),\r\n      is_active: false,\r\n      is_junior: false,\r\n      notes: '',\r\n      token_info: getWithExpiry('token_info'),\r\n      confirm_show: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    postRequest(URLS.staff_get, { _id: this.state._id, token: this.state.token_info })\r\n    .then(resp => {\r\n      if (resp.data.success)\r\n      {\r\n        var result = resp.data.result;\r\n        this.setState({\r\n          name: result.name,\r\n          birthday: moment(result.birthday).format('YYYY-MM-DD'),\r\n          is_active: result.is_active,\r\n          is_junior: result.is_junior,\r\n          notes: result.notes,\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      this.showMessage('Failed to get data');\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  saveCurrent = (nexturl) => {\r\n    postRequest(URLS.staff_edit, {\r\n      _id: this.state._id,\r\n      name: this.state.name,\r\n      birthday: this.state.birthday,\r\n      is_active: this.state.is_active,\r\n      is_junior: this.state.is_junior,\r\n      notes: this.state.notes,\r\n      token: this.state.token_info\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        if (nexturl) this.props.history.replace(nexturl);\r\n        else this.props.history.goBack();\r\n      }\r\n      else {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save')\r\n    });\r\n  }\r\n\r\n  onSaveClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent();\r\n  }\r\n\r\n  onDeleteClick = (e) => {\r\n    this.setState({ confirm_show: true });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ confirm_show: false });\r\n  }\r\n\r\n  confirmedDelete = () => {\r\n    postRequest(URLS.staff_remove, { _id: this.state._id, token: this.state.token_info })\r\n    .then(resp => {\r\n      if (resp.data.success)\r\n      {\r\n        this.props.history.goBack();\r\n      }\r\n      else \r\n      {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage(\"Failed to remove staff\");\r\n    })\r\n  }\r\n\r\n  onShowSchedule = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent('/admin/staff/schedule?id='+this.state._id);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Form id='form'>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title as=\"h4\">Add a staff member</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <label>Name</label>\r\n                        <Form.Control\r\n                          placeholder=\"Company\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.name}\r\n                          onChange={e => this.setState({ name: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <label>Birthday</label>\r\n                        <div className='full-width'>\r\n                          <Form.Control type=\"date\" value={this.state.birthday} required onChange={e => this.setState({ birthday: e.target.value })}>\r\n                          </Form.Control>\r\n                        </div>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container mt-4'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_active} onChange={e => this.setState({ is_active: e.target.checked })} />\r\n                        <label>Is this staff member active?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_junior} onChange={e => this.setState({ is_junior: e.target.checked })} />\r\n                        <label>Is this a Junior Leader?</label>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\" className=\"mt-2\">\r\n                      <Form.Group>\r\n                        <label>Notes</label>\r\n                        <Form.Control\r\n                          cols=\"80\"\r\n                          placeholder=\"Please add notes...\"\r\n                          rows=\"4\"\r\n                          as=\"textarea\"\r\n                          value={this.state.notes}\r\n                          onChange={e => this.setState({ notes: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={this.onSaveClick} className=\"btn-fill float-right ml-auto mr-1\" type=\"submit\" variant=\"info\" id='btn-submit'>Save</Button>\r\n            {/* <Button onClick={this.onNotesClick} className=\"float-right mr-1\" variant=\"light\">Notes</Button> */}\r\n            <Button onClick={this.onShowSchedule} className=\"float-right mr-1\" variant=\"outline-secondary\" type='submit'>Show Schedule</Button>\r\n            <Button onClick={this.onDeleteClick} className=\"float-right mr-1\" variant=\"danger\">Delete</Button>\r\n            <Button onClick={this.onCloseClick} className=\"float-right\" variant=\"outline-secondary\">Close this view</Button>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      <Modal show={this.state.confirm_show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Warning</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure to remove this staff?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={this.confirmedDelete}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Editstaff;\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Table\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from \"../../function\";\r\n\r\nclass StaffSchedule extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      id: url.searchParams.get('id'),\r\n      token_info: getWithExpiry('token_info'),\r\n      schedules: [], \r\n      staffs: []\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.refreshData(this.state.id);\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshData = (staff_id) => {\r\n    Promise.all([postRequest(URLS.schedule_getbystaff, { token: this.state.token_info, staff_id }),\r\n                postRequest(URLS.staff_getall, { token: this.state.token_info })])\r\n    .then(([res1, res2]) => {\r\n      var staffs = [];\r\n      if (res2.data.success)\r\n      {\r\n        staffs = res2.data.result.filter(st => st.is_active);\r\n      }\r\n      if (res1.data.success)\r\n      {\r\n        var schedules = res1.data.result.filter(cl => cl.class_is_active);\r\n        var schedules = schedules.sort((a, b) => {\r\n          return a.time_start.localeCompare(b.time_start);\r\n        })\r\n        for (var i=0; i<schedules.length; i++)\r\n        {\r\n          var staff_names = [];\r\n          for (var j=0; j<schedules[i].staffs.length; j++)\r\n          {\r\n            var staff = staffs.find(s => s._id == schedules[i].staffs[j]);\r\n            if (staff) staff_names.push(staff.name);\r\n          }\r\n          var staff_str = \"\";\r\n          if (staff_names.length > 2)\r\n          {\r\n            staff_str = staff_names[0] + ',' + staff_names[1] + '(+' + (staff_names.length - 2) + 'more)';\r\n          }\r\n          else\r\n          {\r\n            staff_str = staff_names.join(',');\r\n          }\r\n          schedules[i].staff_str = staff_str;\r\n        }\r\n\r\n        this.setState({ schedules, staffs });\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res1.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to get data');\r\n    })\r\n  }\r\n\r\n  onStaffChanged = (e) => {\r\n    this.setState({ id: e.target.value });\r\n    this.refreshData(e.target.value);\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <Form>\r\n                  <Form.Row style={{ alignItems: 'center' }}>\r\n                    <Card.Title as=\"h4\" className='mr-2 mb-3'>Class Schedule of</Card.Title>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={this.state.id}\r\n                        onChange={this.onStaffChanged}\r\n                      >\r\n                        {\r\n                          this.state.staffs.map(st => (\r\n                            <option key={st._id} value={st._id}>{st.name}</option>\r\n                          ))\r\n                        }\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                </Form>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\"></th>\r\n                      <th className=\"border-0\">Class time</th>\r\n                      <th className=\"border-0\"># of students</th>\r\n                      <th className=\"border-0\">Instructors</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.schedules.map(sc => (\r\n                        <tr key={sc._id}>\r\n                          <td><a href={'/admin/class/edit?id='+sc.class_id}>{sc.class_name}</a></td>\r\n                          <td>{ sc.time_start } - { sc.time_end }</td>\r\n                          <td>{ sc.num_students }</td>\r\n                          <td>{ sc.staff_str }</td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Button onClick={this.onCloseClick} className=\"float-right mr-1\" variant=\"outline-secondary\">Close this view</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default StaffSchedule;\r\n","import React, { Component } from \"react\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  Table,\n  Container,\n  Row,\n  Col,\n  ToggleButton,\n} from \"react-bootstrap\";\n\nimport { store } from 'react-notifications-component';\nimport { postRequest, URLS } from \"../../query\";\nimport { getWithExpiry } from '../../function';\n\nclass Class extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      view_regular: true,\n      active_only: true,\n      token_info: getWithExpiry('token_info'),\n      all_classes: [],\n      class_list: []\n    }\n  }\n\n  componentDidMount()\n  {\n    postRequest(URLS.class_getall, { token: this.state.token_info })\n    .then(resp => {\n      if (resp.data.success)\n      {\n        var class_list = resp.data.result.filter(cl => cl.is_regular == this.state.view_regular);\n        this.setState({ class_list, all_classes: resp.data.result })\n      }\n      else\n      {\n        this.showMessage(resp.data.message);\n      }\n    }).catch(e => {\n      console.log(e);\n    })\n  }\n\n  onToggleActive = (e) => {\n    this.setState({\n      active_only: e.target.checked\n    })\n  }\n\n  \n  showMessage = (msg) => {\n    store.addNotification({\n      title: \"Error\",\n      message: msg,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-center\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 3000,\n        // onScreen: true\n      }\n    });\n  }\n\n  viewCalendar = () => {\n    this.props.history.push('/admin/class/calendar');\n  }\n\n  toggleViewRegular = () => {\n    var view_regular = !this.state.view_regular;\n    var class_list = this.state.all_classes.filter(cl => cl.is_regular == view_regular);\n\n    this.setState({ view_regular, class_list });\n  }\n\n  addNewClass = () => {\n    this.props.history.push('/admin/class/add');\n  }\n\n  render()\n  {\n    var class_list = this.state.class_list;\n    if (this.state.active_only)\n      class_list = class_list.filter(cl => cl.is_active);\n    return (\n      <>\n        <div className='horizontal-centering-container pl-3 pr-3'>\n          <div className=''>{ this.state.view_regular ? 'List of Weekly Classes' : 'List of Special Classes'}</div>\n          <div className='horizontal-centering-container' style={{ marginLeft: 'auto', marginRight: 0 }}>\n            <div className='mr-2'>Displaying</div>\n            <ButtonGroup toggle>\n            <ToggleButton type='checkbox' variant='outline-secondary' checked={this.state.active_only}\n            onChange={this.onToggleActive}>Active Only\n            </ToggleButton>\n            </ButtonGroup>\n          </div>\n        </div>\n        <Container fluid>\n          <Card className=\"strpied-tabled-with-hover mt-4\">\n            <Card.Header>\n              <Card.Title as=\"h4\">Class</Card.Title>\n            </Card.Header>\n            <Card.Body className=\"table-full-width table-responsive px-4\">\n              <Row>\n              {\n                class_list.map((cl, key) => (\n                  <Col key={cl._id} md=\"3\" sm=\"6\" xs=\"12\">\n                    <a href={'/admin/class/edit?id='+cl._id}>{cl.name}</a>\n                  </Col>\n                ))\n              }\n              </Row>\n            </Card.Body>\n          </Card>\n          <Row>\n            <Col md=\"12\">\n              <Button onClick={this.toggleViewRegular} className=\"float-right\" variant=\"outline-secondary\">\n                { this.state.view_regular ? 'View special classes' : 'View regular classes' }\n              </Button>\n              <Button onClick={this.viewCalendar} className=\"float-right mr-1\" variant=\"outline-secondary\">View calendar</Button>\n              <Button onClick={this.addNewClass} className=\"btn-fill float-right ml-auto mr-1\" variant=\"outline-secondary\">Add a new class</Button>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Class;\n","import React, { Component } from \"react\";\r\n// react-bootstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from \"../../function\";\r\n\r\nclass Addclass extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      token_info: getWithExpiry('token_info'),\r\n      name: \"\",\r\n      is_regular: false,\r\n      is_testing: false,\r\n      towards_next: false,\r\n      is_active: false,\r\n      belt_group: \"\",\r\n      // belt_color: \"\",\r\n\r\n      beltgroups: [],\r\n      allbelts: [],\r\n      activebelts: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    Promise.all([postRequest(URLS.beltgroup_getall), postRequest(URLS.belt_getall)])\r\n    .then(([resp1, resp2]) => {\r\n      var belts = [];\r\n      var groups = [];\r\n      if (resp1.data.success) {\r\n        groups = resp1.data.result;\r\n      }\r\n      if (resp2.data.success) {\r\n        belts = resp2.data.result;\r\n      }\r\n\r\n      var current_group = groups.length > 0 ? groups[0]._id : \"\";\r\n      var activebelts = belts.filter(belt => belt.group == current_group);\r\n      this.setState({\r\n        beltgroups: groups,\r\n        allbelts: belts,\r\n        activebelts,\r\n        belt_group: current_group,\r\n        // belt_color: activebelts[0]._id\r\n      })\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage(\"Failed to get data\");\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  saveCurrent = (nexturl) => {\r\n    postRequest(URLS.class_add, {\r\n      name: this.state.name,\r\n      is_regular: this.state.is_regular,\r\n      is_active: this.state.is_active,\r\n      is_testing: this.state.is_testing,\r\n      towards_next: this.state.towards_next,\r\n      belt_group: this.state.belt_group,\r\n      // belt_color: this.state.belt_color,\r\n      token: this.state.token_info\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        var data_id = resp.data.id;\r\n        if (nexturl) this.props.history.replace(nexturl+'?id='+data_id);\r\n        else this.props.history.goBack();\r\n      }\r\n      else {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save')\r\n    });\r\n  }\r\n\r\n  onSaveClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent();\r\n  }\r\n\r\n  onShowSchedule = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent('/admin/class/schedule');\r\n  }\r\n\r\n  onBeltGroupChanged = (e) => {\r\n    var beltgroup_id = e.target.value;\r\n    var activebelts = this.state.allbelts.filter(belt => belt.group == beltgroup_id);\r\n    // var belt_color = activebelts.length > 0 ? activebelts[0]._id : \"\";\r\n\r\n    this.setState({ \r\n      belt_group: beltgroup_id ,\r\n      activebelts,\r\n      // belt_color\r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Form id='form'>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title as=\"h4\">Class Setup</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md=\"3\" sm=\"4\" xs=\"12\">\r\n                      <Form.Group>\r\n                        <label>Class name</label>\r\n                        <Form.Control\r\n                          placeholder=\"Class Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.name}\r\n                          onChange={e => this.setState({ name: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className='horizontal-centering-container mt-4'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_regular} onChange={e => this.setState({ is_regular: e.target.checked })} />\r\n                        <label>Is this a regular/weekly class?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_testing} onChange={e => this.setState({ is_testing: e.target.checked })} />\r\n                        <label>Is there testing?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.towards_next} onChange={e => this.setState({ towards_next: e.target.checked })} />\r\n                        <label>Does attendance count towards next belt?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_active} onChange={e => this.setState({ is_active: e.target.checked })} />\r\n                        <label>Is this an active class?</label>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\" sm=\"4\" xs=\"12\">\r\n                      <Form.Group>\r\n                        <label>Belt Group</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          required\r\n                          value={this.state.belt_group}\r\n                          onChange={this.onBeltGroupChanged}\r\n                        >\r\n                          {\r\n                            this.state.beltgroups.map((group, key) => (\r\n                              <option key={group._id} value={group._id}>{group.name}</option>\r\n                            ))\r\n                          }\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* <Row>\r\n                    <Col md=\"3\" sm=\"4\" xs=\"12\">\r\n                      <Form.Group>\r\n                        <label>Schedule Color</label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          required\r\n                          value={this.state.belt_color}\r\n                          onChange={e => this.setState({ belt_color: e.target.value })}\r\n                        >\r\n                          { this.state.activebelts.map((belt, key) => (\r\n                              <option key={belt._id} value={belt._id}>{belt.name}</option>\r\n                            ))\r\n                          }\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row> */}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={this.onSaveClick} className=\"btn-fill float-right ml-auto mr-1\" type=\"submit\" variant=\"info\" id='btn-submit'>Save</Button>\r\n            <Button onClick={this.onCloseClick} className=\"float-right mr-1\" variant=\"outline-secondary\">Close this view</Button>\r\n            <Button onClick={this.onShowSchedule} className=\"float-right\" variant=\"outline-secondary\" type=\"submit\">Show Schedule</Button>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Addclass;\r\n","import React, { Component } from \"react\";\r\n// react-bootstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from \"../../function\";\r\n\r\nclass Editclass extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      _id: url.searchParams.get('id'),\r\n      token_info: getWithExpiry('token_info'),\r\n      name: \"\",\r\n      is_regular: false,\r\n      is_testing: false,\r\n      towards_next: false,\r\n      is_active: false,\r\n      belt_group: \"\",\r\n      // belt_color: \"\",\r\n\r\n      beltgroups: [],\r\n      allbelts: [],\r\n      activebelts: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    Promise.all([\r\n      postRequest(URLS.beltgroup_getall), \r\n      postRequest(URLS.belt_getall), \r\n      postRequest(URLS.class_get, { _id: this.state._id, token: this.state.token_info })\r\n    ])\r\n    .then(([resp1, resp2, resp3]) => {\r\n      var belts = [];\r\n      var groups = [];\r\n      if (resp1.data.success) {\r\n        groups = resp1.data.result;\r\n      }\r\n      if (resp2.data.success) {\r\n        belts = resp2.data.result;\r\n      }\r\n      if (resp3.data.success) {\r\n        var rec = resp3.data.result;\r\n        this.setState({\r\n          name: rec.name,\r\n          is_regular: rec.is_regular,\r\n          is_testing: rec.is_testing,\r\n          is_active: rec.is_active,\r\n          towards_next: rec.towards_next,\r\n          belt_group: rec.belt_group,\r\n          // belt_color: rec.belt_color\r\n        })\r\n      }\r\n\r\n      var current_group = rec.belt_group;\r\n      var activebelts = belts.filter(belt => belt.group == current_group);\r\n      this.setState({\r\n        beltgroups: groups,\r\n        allbelts: belts,\r\n        activebelts,\r\n      })\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage(\"Failed to get data\");\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  saveCurrent = (nexturl) => {\r\n    postRequest(URLS.class_edit, {\r\n      _id: this.state._id,\r\n      name: this.state.name,\r\n      is_regular: this.state.is_regular,\r\n      is_active: this.state.is_active,\r\n      is_testing: this.state.is_testing,\r\n      towards_next: this.state.towards_next,\r\n      belt_group: this.state.belt_group,\r\n      // belt_color: this.state.belt_color,\r\n      token: this.state.token_info\r\n    }).then(resp => {\r\n      if (resp.data.success) {\r\n        if (nexturl) this.props.history.push(nexturl+'?id='+this.state._id);\r\n        else this.props.history.goBack();\r\n      }\r\n      else {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to save')\r\n    });\r\n  }\r\n\r\n  onSaveClick = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent();\r\n  }\r\n\r\n  onShowSchedule = (e) => {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.saveCurrent('/admin/class/schedule');\r\n  }\r\n\r\n  onBeltGroupChanged = (e) => {\r\n    var beltgroup_id = e.target.value;\r\n    var activebelts = this.state.allbelts.filter(belt => belt.group == beltgroup_id);\r\n    // var belt_color = activebelts.length > 0 ? activebelts[0]._id : \"\";\r\n\r\n    this.setState({ \r\n      belt_group: beltgroup_id ,\r\n      activebelts,\r\n      // belt_color\r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Form id='form'>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title as=\"h4\">Class Setup</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md=\"3\" sm=\"4\" xs=\"12\">\r\n                      <Form.Group>\r\n                        <label>Class name</label>\r\n                        <Form.Control\r\n                          placeholder=\"Class Name\"\r\n                          type=\"text\"\r\n                          required\r\n                          value={this.state.name}\r\n                          onChange={e => this.setState({ name: e.target.value })}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className='horizontal-centering-container mt-4'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_regular} onChange={e => this.setState({ is_regular: e.target.checked })} />\r\n                        <label>Is this a regular/weekly class?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_testing} onChange={e => this.setState({ is_testing: e.target.checked })} />\r\n                        <label>Is there testing?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.towards_next} onChange={e => this.setState({ towards_next: e.target.checked })} />\r\n                        <label>Does attendance count towards next belt?</label>\r\n                      </Form.Group>\r\n                      <Form.Group className='horizontal-centering-container'>\r\n                        <input type='checkbox' className='mb-2 mr-2' checked={this.state.is_active} onChange={e => this.setState({ is_active: e.target.checked })} />\r\n                        <label>Is this an active class?</label>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\" sm=\"4\" xs=\"12\">\r\n                      <Form.Group>\r\n                        <label>Belt Group</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          required\r\n                          value={this.state.belt_group}\r\n                          onChange={this.onBeltGroupChanged}\r\n                        >\r\n                          {\r\n                            this.state.beltgroups.map((group, key) => (\r\n                              <option key={group._id} value={group._id}>{group.name}</option>\r\n                            ))\r\n                          }\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* <Row>\r\n                    <Col md=\"3\" sm=\"4\" xs=\"12\">\r\n                      <Form.Group>\r\n                        <label>Schedule Color</label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          required\r\n                          value={this.state.belt_color}\r\n                          onChange={e => this.setState({ belt_color: e.target.value })}\r\n                        >\r\n                          { this.state.activebelts.map((belt, key) => (\r\n                              <option key={belt._id} value={belt._id}>{belt.name}</option>\r\n                            ))\r\n                          }\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row> */}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Button onClick={this.onSaveClick} className=\"btn-fill float-right ml-auto mr-1\" type=\"submit\" variant=\"info\" id='btn-submit'>Save</Button>\r\n            <Button onClick={this.onCloseClick} className=\"float-right mr-1\" variant=\"outline-secondary\">Close this view</Button>\r\n            <Button onClick={this.onShowSchedule} className=\"float-right\" variant=\"outline-secondary\" type=\"submit\">Show Schedule</Button>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Editclass;\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Table\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from \"../../function\";\r\n\r\nclass DailyClass extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      date: url.searchParams.get('date'),\r\n      token_info: getWithExpiry('token_info'),\r\n      schedules: [], \r\n      staffs: []\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.refreshData(new Date(this.state.date));\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshData = (date) => {\r\n    Promise.all([postRequest(URLS.schedule_getbydate, { token: this.state.token_info, date }),\r\n                postRequest(URLS.staff_getall, { token: this.state.token_info })])\r\n    .then(([res1, res2]) => {\r\n      var staffs = [];\r\n      if (res2.data.success)\r\n      {\r\n        staffs = res2.data.result.filter(st => st.is_active);\r\n      }\r\n      if (res1.data.success)\r\n      {\r\n        var schedules = res1.data.result.filter(cl => cl.class_is_active);\r\n        var schedules = schedules.sort((a, b) => {\r\n          return a.time_start.localeCompare(b.time_start);\r\n        })\r\n        for (var i=0; i<schedules.length; i++)\r\n        {\r\n          var staff_names = [];\r\n          for (var j=0; j<schedules[i].staffs.length; j++)\r\n          {\r\n            var staff = staffs.find(s => s._id == schedules[i].staffs[j]);\r\n            if (staff) staff_names.push(staff.name);\r\n          }\r\n          var staff_str = \"\";\r\n          if (staff_names.length > 2)\r\n          {\r\n            staff_str = staff_names[0] + ',' + staff_names[1] + '(+' + (staff_names.length - 2) + 'more)';\r\n          }\r\n          else\r\n          {\r\n            staff_str = staff_names.join(',');\r\n          }\r\n          schedules[i].staff_str = staff_str;\r\n        }\r\n        this.setState({ schedules, staffs });\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res1.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to get data');\r\n    })\r\n  }\r\n\r\n  onDayChanged = (e) => {\r\n    this.setState({ date: e.target.value });\r\n    this.refreshData(e.target.value);\r\n  }\r\n\r\n  onCloseClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  \r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <Form>\r\n                  <Form.Row style={{ alignItems: 'center' }}>\r\n                    <Card.Title as=\"h4\" className='mr-2 mb-3'>Class Schedule on</Card.Title>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        value={this.state.date}\r\n                        onChange={this.onDayChanged}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                </Form>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\"></th>\r\n                      <th className=\"border-0\">Class time</th>\r\n                      <th className=\"border-0\"># of students</th>\r\n                      <th className=\"border-0\">Instructors</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.schedules.map(sc => (\r\n                        <tr key={sc._id}>\r\n                          <td><a href={'/admin/class/edit?id='+sc.class_id}>{sc.class_name}</a></td>\r\n                          <td>{ sc.time_start } - { sc.time_end }</td>\r\n                          <td>{ sc.num_students }</td>\r\n                          <td>{ sc.staff_str }</td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Button onClick={this.onCloseClick} className=\"float-right mr-1\" variant=\"outline-secondary\">Close this view</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DailyClass;\r\n","import React, { Component } from 'react'\r\n\r\nexport class CalendarCell extends Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className='calendar_float_cell' style={{ position: 'absolute', left: this.props.left, top: this.props.top, height: this.props.bottom-this.props.top, width: this.props.width, backgroundColor: this.props.backgroundColor }}>\r\n        <div>{this.props.name}</div>\r\n        <div>{this.props.time_start} - {this.props.time_end}</div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport randomColor from 'randomcolor';\r\n\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ToggleButton,\r\n} from \"react-bootstrap\";\r\n\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry, getMonday, addDay, getMinutes } from '../../function';\r\nimport { CalendarCell } from \"../../components/Others/calendarCell\";\r\n\r\nclass Class extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      current_start: getMonday(new Date()),\r\n      token_info: getWithExpiry('token_info'),\r\n      schedules: [],\r\n      classes: []\r\n    }\r\n\r\n    this.calendarBodyRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    postRequest(URLS.class_getall, { token: this.state.token_info })\r\n    .then(resp => {\r\n      if (resp.data.success) {\r\n        this.processData(resp.data.result, this.state.schedules);\r\n      }\r\n      else this.showMessage(resp.data.message);\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n    this.refreshData(this.state.current_start);\r\n    this.calendarBodyRef.current.scrollTop = 576;\r\n  }\r\n\r\n  refreshData = (date_start) => {\r\n    postRequest(URLS.schedule_getbyinterval, { token: this.state.token_info, date_start, date_end: addDay(date_start, 7) })\r\n    .then(resp => {\r\n      if (resp.data.success)\r\n      {\r\n        this.processData(this.state.classes, resp.data.result);\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  _processOneCluster = (list, s, e, nmax_stack) => {\r\n    var active_ids = [];\r\n    var width = 60 + 60 / nmax_stack;\r\n    var delta = nmax_stack > 1 ? (120-width)/(nmax_stack-1) : 0;\r\n    for (var i=s; i<e; i++)\r\n    {\r\n      var p = nmax_stack - 1;\r\n      for (var j=nmax_stack-1; j>=0; j--)\r\n      {\r\n        if (active_ids[j] < 0 || active_ids[j] == undefined || list[active_ids[j]].bottom <= list[i].top)\r\n        {\r\n          active_ids[j] = -1;\r\n          p = j;\r\n        }\r\n      }\r\n      active_ids[p] = i;\r\n      list[i].left = list[i].left + delta*p;\r\n      list[i].width = width;\r\n    }\r\n  }\r\n\r\n  processData = (classes, schedules) => {\r\n    var processed = [];\r\n    for (var i=0; i<schedules.length; i++)\r\n    {\r\n      var sc = schedules[i];\r\n      var cl = classes.find(c => c._id == sc.class_id);\r\n      if (!cl || !cl.is_active) continue;\r\n      var day = sc.is_regular ? (sc.weekday+6)%7 : (new Date(sc.date).getDay()+6)%7;\r\n\r\n      processed.push({\r\n        _id: sc._id,\r\n        name: cl ? cl.name : '',\r\n        time_start: sc.time_start,\r\n        time_end: sc.time_end,\r\n        left: day * 128,\r\n        top: getMinutes(sc.time_start)*48/60,\r\n        bottom: getMinutes(sc.time_end)*48/60,\r\n        backgroundColor: randomColor({luminosity: 'light', seed:sc.class_id}),\r\n        width: 128\r\n      })\r\n    }\r\n\r\n    processed.sort((a, b) => {\r\n      if (a.left != b.left) return a.left - b.left;\r\n      return a.top - b.top;\r\n    })\r\n\r\n    var active_ids = [];\r\n    var pr = 0;\r\n    var nmax_stack = 0;\r\n    for (var i=0; i<processed.length; i++)\r\n    {\r\n      var cur = processed[i];\r\n      var new_actives = active_ids.filter(id => processed[id].bottom > cur.top && processed[id].left == cur.left);\r\n      if (new_actives.length == 0)\r\n      {\r\n        // got one cluster\r\n        this._processOneCluster(processed, pr, i, nmax_stack);\r\n        pr = i;\r\n        nmax_stack = 0;\r\n      }\r\n      new_actives.push(i);\r\n      active_ids = new_actives;\r\n      nmax_stack = Math.max(nmax_stack, active_ids.length);\r\n    }\r\n    this._processOneCluster(processed, pr, processed.length, nmax_stack);\r\n\r\n    this.setState({ classes, schedules: processed });\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  closeView = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  onLeftClick = () => {\r\n    var new_date = addDay(this.state.current_start, -7);\r\n    this.setState({ current_start: new_date });\r\n    this.refreshData(new_date);\r\n  }\r\n\r\n  onRightClick = () => {\r\n    var new_date = addDay(this.state.current_start, 7);\r\n    this.setState({ current_start: new_date });\r\n    this.refreshData(new_date);\r\n  }\r\n\r\n  onColumnClick = (i) => {\r\n    this.props.history.push('/admin/class/daily?date='+moment(addDay(this.state.current_start, i)).format('YYYY-MM-DD'));\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n        <div className='horizontal-centering-container pl-3 pr-3'>\r\n          <div className=''>Calendar View of Schedule</div>\r\n          <div className='horizontal-centering-container' style={{ marginLeft: 'auto', marginRight: 0 }}>\r\n            <Button variant='secondary' onClick={this.closeView}>Close this view</Button>\r\n          </div>\r\n        </div>\r\n        <Card className=\"mt-4\">\r\n          <Card.Body className=\"px-4\">\r\n            <div className='calendar_container'>\r\n              <div className='calendar_box'>\r\n                <div className='calendar_header'>\r\n                  <div className='calendar_navcell'>\r\n                    <Button variant='light' style={styles.btn_nav} onClick={this.onLeftClick}>\r\n                      <div style={styles.arrowLeft}></div>\r\n                    </Button>\r\n                    <Button variant='light' style={styles.btn_nav} onClick={this.onRightClick}>\r\n                      <div style={styles.arrowRight}></div>\r\n                    </Button>\r\n                  </div>\r\n                  <div style={{ borderRight: '1px solid #ccc' }}>\r\n                    <div style={{ height: 24, borderBottom: '1px solid #ccc', fontSize: 14, paddingLeft: 12 }}>\r\n                      { moment(this.state.current_start).format('MM/DD/YYYY') } ~ { moment(addDay(this.state.current_start, 6)).format('MM/DD/YYYY') }\r\n                    </div>\r\n                    <div style={{ display: 'flex' }}>\r\n                      <div className='calendar_daycell'>Monday</div>\r\n                      <div className='calendar_daycell'>Tuesday</div>\r\n                      <div className='calendar_daycell'>Wednesday</div>\r\n                      <div className='calendar_daycell'>Thursday</div>\r\n                      <div className='calendar_daycell'>Friday</div>\r\n                      <div className='calendar_daycell'>Saturday</div>\r\n                      <div className='calendar_daycell' style={{ borderRight: 'none' }}>Sunday</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='calendar_body' ref={this.calendarBodyRef}>\r\n                  <div className='calendar_timeline'>\r\n                    <div className='calendar_timecell'>12:00 AM</div>\r\n                    <div className='calendar_timecell'>1:00 AM</div>\r\n                    <div className='calendar_timecell'>2:00 AM</div>\r\n                    <div className='calendar_timecell'>3:00 AM</div>\r\n                    <div className='calendar_timecell'>4:00 AM</div>\r\n                    <div className='calendar_timecell'>5:00 AM</div>\r\n                    <div className='calendar_timecell'>6:00 AM</div>\r\n                    <div className='calendar_timecell'>7:00 AM</div>\r\n                    <div className='calendar_timecell'>8:00 AM</div>\r\n                    <div className='calendar_timecell'>9:00 AM</div>\r\n                    <div className='calendar_timecell'>10:00 AM</div>\r\n                    <div className='calendar_timecell'>11:00 AM</div>\r\n                    <div className='calendar_timecell'>12:00 PM</div>\r\n                    <div className='calendar_timecell'>1:00 PM</div>\r\n                    <div className='calendar_timecell'>2:00 PM</div>\r\n                    <div className='calendar_timecell'>3:00 PM</div>\r\n                    <div className='calendar_timecell'>4:00 PM</div>\r\n                    <div className='calendar_timecell'>5:00 PM</div>\r\n                    <div className='calendar_timecell'>6:00 PM</div>\r\n                    <div className='calendar_timecell'>7:00 PM</div>\r\n                    <div className='calendar_timecell'>8:00 PM</div>\r\n                    <div className='calendar_timecell'>9:00 PM</div>\r\n                    <div className='calendar_timecell'>10:00 PM</div>\r\n                    <div className='calendar_timecell'>11:00 PM</div>\r\n                  </div>\r\n                  <div className='calendar_main'>\r\n                    {\r\n                      [0,1,2,3,4,5,6].map((i) => (\r\n                        <div key={'calendar_column_'+i} className='calendar_column'>\r\n                          {\r\n                            [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23].map(j => (\r\n                              <div key={'calendar_cell_'+i+'_'+j} className='calendar_cell'>\r\n                                <div className='calendar_bgcell0'></div>\r\n                                <div className='calendar_bgcell1'></div>\r\n                              </div>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                      ))\r\n                    }\r\n                    {\r\n                      this.state.schedules.map(sc => (\r\n                        <CalendarCell key={sc._id} name={sc.name} backgroundColor={sc.backgroundColor}\r\n                        top={sc.top} bottom={sc.bottom} left={sc.left}\r\n                        time_start={sc.time_start} time_end={sc.time_end} width={sc.width}/>\r\n                      ))\r\n                    }\r\n                    {\r\n                      [0,1,2,3,4,5,6].map(i => (\r\n                        <div key={'calendar_column_overlay_'+i} className='calendar_column_overlay' style={{ left: i*128 }}  \r\n                        onClick={() => this.onColumnClick(i)}></div>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  arrowLeft: {\r\n    width: 0,\r\n    height: 0, \r\n    borderTop: '4px solid transparent',\r\n    borderBottom: '4px solid transparent',\r\n    borderRight: '4px solid black', \r\n  },\r\n  arrowRight: {\r\n    width: 0,\r\n    height: 0, \r\n    borderTop: '4px solid transparent',\r\n    borderBottom: '4px solid transparent',\r\n    borderLeft: '4px solid black', \r\n  },\r\n  btn_nav: {\r\n    border: 'none',\r\n    padding: 0,\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n}\r\n\r\nexport default Class;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Card,\r\n  Form,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport { store } from 'react-notifications-component';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry } from '../../function';\r\n\r\nconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nclass Schedule extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    var url = new URL(window.location.href);\r\n    this.state = {\r\n      class_id: url.searchParams.get('id'),\r\n      token_info: getWithExpiry('token_info'),\r\n\r\n      class_name: '',\r\n      class_is_regular: true,\r\n      list: [],\r\n      rooms: [],\r\n      staffs: [],\r\n\r\n      show_modal: 0,\r\n      show_assign_modal: false,\r\n      show_confirm_modal: false,\r\n\r\n      session_id: '',\r\n      session_date: moment().format('YYYY-MM-DD'),\r\n      session_room_id: \"\",\r\n      session_weekday: 1,\r\n      session_start: \"\",\r\n      session_end: \"\",\r\n      session_staffs: []\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    Promise.all([postRequest(URLS.schedule_getbyclass, { class_id: this.state.class_id, token: this.state.token_info }),\r\n                postRequest(URLS.room_getall, { token: this.state.token_info }),\r\n                postRequest(URLS.staff_getall, { token: this.state.token_info })])\r\n    .then(([res1, res2, res3]) => {\r\n      var rooms = [];\r\n      var staffs = [];\r\n      if (res2.data.success)\r\n      {\r\n        rooms = res2.data.result;\r\n      }\r\n      if (res3.data.success)\r\n      {\r\n        staffs = res3.data.result.filter(st => st.is_active);\r\n      }\r\n      if (res1.data.success)\r\n      {\r\n        var ret = res1.data.result;\r\n        var schedules = ret.schedules;\r\n        for (var i=0; i<schedules.length; i++)\r\n        {\r\n          var staff_names = [];\r\n          for (var j=0; j<schedules[i].staffs.length; j++)\r\n          {\r\n            var staff = staffs.find(s => s._id == schedules[i].staffs[j]);\r\n            if (staff) staff_names.push(staff.name);\r\n          }\r\n          var staff_str = \"\";\r\n          if (staff_names.length > 2)\r\n          {\r\n            staff_str = staff_names[0] + ',' + staff_names[1] + '(+' + (staff_names.length - 2) + 'more)';\r\n          }\r\n          else\r\n          {\r\n            staff_str = staff_names.join(',');\r\n          }\r\n          schedules[i].staff_str = staff_str;\r\n        }\r\n        // console.log(ret);\r\n        this.setState({ list: ret.schedules, class_name: ret.class.name, class_is_regular: ret.class.is_regular, rooms, staffs })\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(res1.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  closeView = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  addNewSession = () => {\r\n    this.setState({ \r\n      show_modal: 1,\r\n      session_room_id: this.state.rooms[0]._id,\r\n      session_date: new Date(),\r\n      session_weekday: 1,\r\n      session_start: \"\",\r\n      session_end: \"\",\r\n    });\r\n  }\r\n\r\n  onMofifyClicked = (schedule) => {\r\n    this.setState({\r\n      show_modal: 2,\r\n      session_id: schedule._id,\r\n      session_room_id: schedule.room_id,\r\n      session_date: schedule.date,\r\n      session_weekday: schedule.weekday,\r\n      session_start: schedule.time_start,\r\n      session_end: schedule.time_end,\r\n    })\r\n  }\r\n\r\n  onAssignClicked = (schedule) => {\r\n    this.setState({\r\n      show_assign_modal: true,\r\n      session_id: schedule._id,\r\n      session_staffs: schedule.staffs,\r\n    })\r\n  }\r\n\r\n  onAssignChanged = (staff_id, checked) => {\r\n    if (checked && this.state.session_staffs.indexOf(staff_id) == -1)\r\n    {\r\n      var staffs = Object.assign([], this.state.session_staffs);\r\n      staffs.push(staff_id);\r\n      this.setState({ session_staffs: staffs });\r\n    }\r\n    else if (!checked && this.state.session_staffs.indexOf(staff_id) != -1)\r\n    {\r\n      var staffs = Object.assign([], this.state.session_staffs);\r\n      var idx = this.state.session_staffs.indexOf(staff_id);\r\n      staffs.splice(idx, 1);\r\n      this.setState({ session_staffs: staffs });\r\n    }\r\n  }\r\n\r\n  onDeleteClicked = (schedule) => {\r\n    this.setState({\r\n      session_id: schedule._id,\r\n      show_confirm_modal: true\r\n    })\r\n  }\r\n\r\n  handleOk = () => {\r\n    var url = this.state.show_modal == 1 ? URLS.schedule_add : URLS.schedule_edit;\r\n    var data = {\r\n      class_id: this.state.class_id,\r\n      is_regular: this.state.class_is_regular,\r\n      room_id: this.state.session_room_id,\r\n      weekday: this.state.session_weekday,\r\n      date: this.state.session_date,\r\n      time_start: this.state.session_start,\r\n      time_end: this.state.session_end,\r\n      token: this.state.token_info\r\n    }\r\n\r\n    if (this.state.show_modal == 2) {\r\n      data._id = this.state.session_id;\r\n    }\r\n    else\r\n    {\r\n      data.staffs = [];\r\n    }\r\n    this.handleClose();\r\n    postRequest(url, data).then(resp => {\r\n      if (!resp.data.success)\r\n        this.showMessage(resp.data.message);\r\n      else\r\n      {\r\n        window.location.reload();\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to add session');\r\n    })\r\n  }\r\n\r\n  handleAssign = () => {\r\n    var url = URLS.schedule_edit;\r\n    var data = {\r\n      _id: this.state.session_id,\r\n      staffs: this.state.session_staffs,\r\n      token: this.state.token_info\r\n    }\r\n\r\n    this.handleCloseAssignModal();\r\n    postRequest(url, data).then(resp => {\r\n      if (!resp.data.success)\r\n        this.showMessage(resp.data.message);\r\n      else\r\n      {\r\n        window.location.reload();\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to add session');\r\n    })\r\n  }\r\n\r\n  confirmedDelete = () => {\r\n    postRequest(URLS.schedule_remove, { _id: this.state.session_id, token: this.state.token_info })\r\n    .then(resp => {\r\n      if (resp.data.success)\r\n      {\r\n        window.location.reload();\r\n      }\r\n      else\r\n      {\r\n        this.showMessage(resp.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      this.showMessage('Failed to delete schedule');\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show_modal: 0 });\r\n  }\r\n\r\n  handleCloseConfirm = () => {\r\n    this.setState({ show_confirm_modal: false });\r\n  }\r\n\r\n  handleCloseAssignModal = () => {\r\n    this.setState({ show_assign_modal: false });\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <Card.Title as=\"h4\">Class Schedule for {this.state.class_name}</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">Date</th>\r\n                      <th className=\"border-0\">Timeline</th>\r\n                      <th className=\"border-0\"># Students</th>\r\n                      <th className=\"border-0\">Instructors</th>\r\n                      <th className=\"border-0\" style={{ width: 56 }}></th>\r\n                      <th className=\"border-0\" style={{ width: 56 }}></th>\r\n                      <th className=\"border-0\" style={{ width: 56 }}></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.list.map(sc => (\r\n                        <tr key={sc._id}>\r\n                          <td>{ this.state.class_is_regular ? weekdays[sc.weekday] : moment(sc.date).format('MM/DD/YYYY')}</td>\r\n                          <td>{ sc.time_start } - { sc.time_end }</td>\r\n                          <td>{ sc.num_students }</td>\r\n                          <td>{ sc.staff_str }</td>\r\n                          <td><Button variant='outline-secondary' onClick={() => this.onMofifyClicked(sc)}>Modify</Button></td>\r\n                          <td><Button variant='outline-secondary' onClick={() => this.onAssignClicked(sc)}>Assign</Button></td>\r\n                          <td><Button variant='danger' onClick={() => this.onDeleteClicked(sc)}>Delete</Button></td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Button onClick={this.closeView} className=\"float-right mr-1\" variant=\"outline-secondary\">Close this view</Button>\r\n              <Button onClick={this.addNewSession} className=\"btn-fill float-right ml-auto mr-1\" variant=\"outline-secondary\">Add class session</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Modal\r\n          show={!!this.state.show_modal}\r\n          onHide={this.handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.show_modal == 2 ? 'Modify Session' : 'Add Session' }</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group>\r\n                <label>Class</label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={this.state.class_name}\r\n                  readOnly\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group className={ this.state.class_is_regular ? '' : 'hidden'}>\r\n                <label>Room</label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={this.state.session_room_id}\r\n                  onChange={e => this.setState({ session_room_id: e.target.value })}\r\n                >\r\n                  {\r\n                    this.state.rooms.map((room, key) => (\r\n                      <option key={room._id} value={room._id}>{room.name}</option>\r\n                    ))\r\n                  }\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group className={ this.state.class_is_regular ? '' : 'hidden'}>\r\n                <label>Date</label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={this.state.session_weekday}\r\n                  onChange={e => this.setState({ session_weekday: e.target.value })}\r\n                >\r\n                  <option value=\"1\">Monday</option>\r\n                  <option value=\"2\">Tuesday</option>\r\n                  <option value=\"3\">Wednesday</option>\r\n                  <option value=\"4\">Thursday</option>\r\n                  <option value=\"5\">Friday</option>\r\n                  <option value=\"6\">Saturday</option>\r\n                  <option value=\"0\">Sunday</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group className={ this.state.class_is_regular ? 'hidden' : '' }>\r\n                <label>Date</label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={this.state.session_date}\r\n                  onChange={e => this.setState({ session_date: e.target.value })}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <label>Start Time</label>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  value={this.state.session_start}\r\n                  step=\"60\"\r\n                  onChange={e => this.setState({ session_start: e.target.value })}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <label>End Time</label>\r\n                <Form.Control\r\n                  type=\"time\"\r\n                  value={this.state.session_end}\r\n                  step=\"60\"\r\n                  onChange={e => this.setState({ session_end: e.target.value })}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleOk} className='btn-fill'>{this.state.show_modal == 2 ? 'Modify' : 'Add' }</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={this.state.show_assign_modal} onHide={this.handleCloseAssignModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Assign instructors</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '80%' }}>\r\n            <Form>\r\n              {\r\n                this.state.staffs.map(staff => (\r\n                  <Form.Group className='horizontal-centering-container' key={staff._id}>\r\n                    <input type='checkbox' className='mb-2 mr-2' checked={this.state.session_staffs.indexOf(staff._id) != -1 }\r\n                    onChange={e => this.onAssignChanged(staff._id, e.target.checked)} />\r\n                    <label>{staff.name}</label>\r\n                  </Form.Group>\r\n                ))\r\n              }\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleCloseAssignModal}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.handleAssign}>\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={this.state.show_confirm_modal} onHide={this.handleCloseConfirm}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Warning</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure to delete this schedule?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleCloseConfirm}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.confirmedDelete}>\r\n              OK\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Schedule;\r\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction Belt () {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Light Bootstrap Table Heading</Card.Title>\n                <p className=\"card-category\">\n                  Created using Montserrat Font Family\n                </p>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"typography-line\">\n                  <h1>\n                    <span>Header 1</span>\n                    The Life of Light Bootstrap Dashboard React\n                  </h1>\n                </div>\n                <div className=\"typography-line\">\n                  <h2>\n                    <span>Header 2</span>\n                    The Life of Light Bootstrap Dashboard React\n                  </h2>\n                </div>\n                <div className=\"typography-line\">\n                  <h3>\n                    <span>Header 3</span>\n                    The Life of Light Bootstrap Dashboard React\n                  </h3>\n                </div>\n                <div className=\"typography-line\">\n                  <h4>\n                    <span>Header 4</span>\n                    The Life of Light Bootstrap Dashboard React\n                  </h4>\n                </div>\n                <div className=\"typography-line\">\n                  <h5>\n                    <span>Header 5</span>\n                    The Life of Light Bootstrap Dashboard React\n                  </h5>\n                </div>\n                <div className=\"typography-line\">\n                  <h6>\n                    <span>Header 6</span>\n                    The Life of Light Bootstrap Dashboard React\n                  </h6>\n                </div>\n                <div className=\"typography-line\">\n                  <p>\n                    <span>Paragraph</span>I will be the leader of a company that\n                    ends up being worth billions of dollars, because I got the\n                    answers. I understand culture. I am the nucleus. I think\n                    that’s a responsibility that I have, to push possibilities,\n                    to show people, this is the level that things could be at.\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Quote</span>\n                  <blockquote>\n                    <p className=\"blockquote blockquote-primary\">\n                      \"I will be the leader of a company that ends up being\n                      worth billions of dollars, because I got the answers. I\n                      understand culture. I am the nucleus. I think that’s a\n                      responsibility that I have, to push possibilities, to show\n                      people, this is the level that things could be at.\"{\" \"}\n                      <br></br>\n                      <br></br>\n                      <small>- Noaa</small>\n                    </p>\n                  </blockquote>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Muted Text</span>\n                  <p className=\"text-muted\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Primary Text</span>\n                  <p className=\"text-primary\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Info Text</span>\n                  <p className=\"text-info\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Success Text</span>\n                  <p className=\"text-success\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Warning Text</span>\n                  <p className=\"text-warning\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Danger Text</span>\n                  <p className=\"text-danger\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <h2>\n                    <span>Small Tag</span>\n                    Header with small subtitle <br></br>\n                    <small>Use \"small\" tag for the headers</small>\n                  </h2>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Belt;\n","import React from \"react\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n  Form,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nfunction Student () {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-chart text-warning\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Number</p>\n                      <Card.Title as=\"h4\">150GB</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-redo mr-1\"></i>\n                  Update Now\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-light-3 text-success\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <Card.Title as=\"h4\">$ 1,345</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-calendar-alt mr-1\"></i>\n                  Last day\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-vector text-danger\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <Card.Title as=\"h4\">23</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-clock-o mr-1\"></i>\n                  In the last hour\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <Card.Title as=\"h4\">+45K</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-redo mr-1\"></i>\n                  Update now\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Users Behavior</Card.Title>\n                <p className=\"card-category\">24 Hours performance</p>\n              </Card.Header>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Click <i className=\"fas fa-circle text-warning\"></i>\n                  Click Second Time\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-history\"></i>\n                  Updated 3 minutes ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Email Statistics</Card.Title>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Bounce <i className=\"fas fa-circle text-warning\"></i>\n                  Unsubscribe\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-clock\"></i>\n                  Campaign sent 2 days ago\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">2017 Sales</Card.Title>\n                <p className=\"card-category\">All products including Taxes</p>\n              </Card.Header>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Tesla Model S <i className=\"fas fa-circle text-danger\"></i>\n                  BMW 5 Series\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-check\"></i>\n                  Data information certified\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card className=\"card-tasks\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Tasks</Card.Title>\n                <p className=\"card-category\">Backend development</p>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"table-full-width\">\n                  <Table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Form.Check className=\"mb-1 pl-0\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </td>\n                        <td>\n                          Sign contract for \"What are conference organizers\n                          afraid of?\"\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-488980961\">\n                                Edit Task..\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"info\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-506045838\">Remove..</Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"danger\"\n                            >\n                              <i className=\"fas fa-times\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Form.Check className=\"mb-1 pl-0\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultChecked\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </td>\n                        <td>\n                          Lines From Great Russian Literature? Or E-mails From\n                          My Boss?\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-537440761\">\n                                Edit Task..\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"info\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-21130535\">Remove..</Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"danger\"\n                            >\n                              <i className=\"fas fa-times\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Form.Check className=\"mb-1 pl-0\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultChecked\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </td>\n                        <td>\n                          Flooded: One year later, assessing what was lost and\n                          what was found when a ravaging rain swept through\n                          metro Detroit\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-577232198\">\n                                Edit Task..\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"info\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-773861645\">Remove..</Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"danger\"\n                            >\n                              <i className=\"fas fa-times\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Form.Check className=\"mb-1 pl-0\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultChecked\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </td>\n                        <td>\n                          Create 4 Invisible User Experiences you Never Knew\n                          About\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-422471719\">\n                                Edit Task..\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"info\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-829164576\">Remove..</Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"danger\"\n                            >\n                              <i className=\"fas fa-times\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Form.Check className=\"mb-1 pl-0\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </td>\n                        <td>Read \"Following makes Medium better\"</td>\n                        <td className=\"td-actions text-right\">\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-160575228\">\n                                Edit Task..\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"info\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-922981635\">Remove..</Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"danger\"\n                            >\n                              <i className=\"fas fa-times\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Form.Check className=\"mb-1 pl-0\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"\"\n                                disabled\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </td>\n                        <td>Unfollow 5 enemies from twitter</td>\n                        <td className=\"td-actions text-right\">\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-938342127\">\n                                Edit Task..\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"info\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id=\"tooltip-119603706\">Remove..</Tooltip>\n                            }\n                          >\n                            <Button\n                              className=\"btn-simple btn-link p-1\"\n                              type=\"button\"\n                              variant=\"danger\"\n                            >\n                              <i className=\"fas fa-times\"></i>\n                            </Button>\n                          </OverlayTrigger>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"now-ui-icons loader_refresh spin\"></i>\n                  Updated 3 minutes ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Student;\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n// react-bootstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getMinutes, getWithExpiry, lowerBoundIndex, minutes2TimeString } from \"../../function\";\r\n\r\nconst type_titles = {\r\n  all: 'All Attendance',\r\n  late: 'Late Attendance',\r\n  wrong: 'Wrong Class Attendance',\r\n  missed: 'Missed Class'\r\n}\r\n\r\nclass ReportStudent extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      students: [],\r\n      student: '_all_',\r\n      belts: [],\r\n      belt: '_all_',\r\n      classes: [],\r\n      sel_class: '_all_',\r\n      report_type: 'all',\r\n      consecutive: 1,\r\n\r\n      filtered: [],\r\n      logs: [],\r\n      day_start: moment().format('YYYY-MM-DD'),\r\n      day_end: moment().format('YYYY-MM-DD'),\r\n      token_info: getWithExpiry('token_info'),\r\n\r\n      gen_day_start: moment().format('YYYY-MM-DD'),\r\n      gen_day_end: moment().format('YYYY-MM-DD'),\r\n      gen_student_name: '',\r\n      gen_belt: '',\r\n      gen_class: '',\r\n      gen_report_type: 'all',\r\n      gen_consecutive: 1,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      postRequest(URLS.student_getall, { token: this.state.token_info }),\r\n      postRequest(URLS.belt_getall, { token: this.state.token_info }),\r\n      postRequest(URLS.class_getall, { token: this.state.token_info })\r\n    ])\r\n    .then(([res1, res2, res3]) => {\r\n      if (res1.data.success) {\r\n        let data = res1.data.result;\r\n        console.log(data);\r\n        this.setState({ students: data });\r\n        // this.fetchStaffData(data[0]?._id);\r\n      } else {\r\n        console.log(res1.data.message);\r\n      }\r\n      if (res2.data.success) {\r\n        this.setState({ belts: res2.data.result })\r\n      } else {\r\n        console.log(res2.data.message);\r\n      }\r\n\r\n      if (res3.data.success) {\r\n        this.setState({ classes: res3.data.result })\r\n      } else {\r\n        console.log(res3.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  handleClickView = () => {\r\n    if (this.state.day_start.localeCompare(this.state.day_end) > 0) {\r\n      this.setState({ filtered: [] });\r\n      return;\r\n    }\r\n\r\n    let query = {\r\n      createdAt: { \r\n        $gte: moment(this.state.day_start).toISOString(),\r\n        $lt: moment(this.state.day_end).add(1, 'days').toISOString()\r\n      },\r\n      token: this.state.token_info\r\n    }\r\n    let newstate = {};\r\n\r\n    if (this.state.student !== '_all_') {\r\n      query.student = this.state.student;\r\n      let student = this.state.students.find(s => s._id === this.state.student);\r\n      newstate.gen_student_name = student.firstname + ' ' + student.lastname;\r\n    } else {\r\n      newstate.gen_student_name = '';\r\n    }\r\n\r\n    if (this.state.belt !== '_all_') {\r\n      let belt = this.state.belts.find(b => b._id === this.state.belt);\r\n      newstate.gen_belt = belt.name;\r\n      query.belt = this.state.belt;\r\n    } else {\r\n      newstate.gen_belt = '';\r\n    }\r\n    if (this.state.sel_class !== '_all_') {\r\n      let sel_class = this.state.classes.find(c => c._id === this.state.sel_class);\r\n      newstate.gen_class = sel_class.name;\r\n      query.class_id = this.state.sel_class;\r\n    } else {\r\n      newstate.gen_class = '';\r\n    }\r\n\r\n    newstate.gen_report_type = 'all';\r\n    if (this.state.report_type === 'late') {\r\n      query.is_late = true;\r\n      newstate.gen_report_type = 'late'\r\n    } else if (this.state.report_type === 'wrong') {\r\n      query.is_wrong = true;\r\n      newstate.gen_report_type = 'wrong'\r\n    } else if (this.state.report_type === 'missed') {\r\n      query.is_missed = true;\r\n      query.consecutive = this.state.consecutive;\r\n      newstate.gen_report_type = 'missed'\r\n      newstate.gen_consecutive = this.state.consecutive;\r\n    }\r\n\r\n    newstate.gen_day_start = this.state.day_start;\r\n    newstate.gen_day_end = this.state.day_end;\r\n    this.setState(newstate);\r\n\r\n    postRequest(URLS.check_student_get, query)\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        this.setState({ filtered: res.data.result })\r\n      } else {\r\n        console.log(res.data.message);\r\n      }\r\n    })\r\n  }\r\n\r\n  handleExport = () => {\r\n    let title = 'Student Attendance Report\\n'+type_titles[this.state.gen_report_type]+' '+\r\n      (this.state.gen_report_type === 'missed' ? `${this.state.gen_consecutive} consecutive `: '')+\r\n      (!!this.state.gen_student_name ? `Student: ${this.state.gen_student_name} ` : '')+\r\n      (!!this.state.gen_belt ? `Belt: ${this.state.gen_belt} ` : '')+\r\n      (!!this.state.gen_class ? `Class: ${this.state.gen_class} ` : '')+\r\n      `(${moment(this.state.gen_day_start).format('MM/DD/YYYY')} - ${moment(this.state.gen_day_end).format('MM/DD/YYYY')})`\r\n\r\n    let headers = ['Student', 'Belt', 'Date', 'Class'];\r\n    if (this.state.gen_report_type !== 'missed') headers.push('');\r\n    const options = { \r\n      filename: 'Student Attendance',\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalSeparator: '.',\r\n      showLabels: true, \r\n      showTitle: true,\r\n      title: title,\r\n      useTextFile: false,\r\n      useBom: true,\r\n      headers\r\n    };\r\n\r\n    const csvExporter = new ExportToCsv(options);\r\n    let data = this.state.filtered.map(d => {\r\n      let nd = {\r\n        student: d.student.firstname + ' ' + d.student.lastname,\r\n        belt: d.belt,\r\n        date: moment(d.createdAt).format('MM/DD/YYYY'),\r\n        class: d.class_name,\r\n      };\r\n      if (this.state.gen_report_type !== 'missed') {\r\n        nd.other =  d.is_late && d.is_wrong ? '**Late Wrong class' : d.is_late ? '**Late' : d.is_wrong ? '**Wrong class' : ''\r\n      }\r\n      return nd;\r\n    });\r\n    csvExporter.generateCsv(data);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Card>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col xs=\"12\" sm=\"6\" md=\"8\">\r\n                <Row>\r\n                  <Col xs={12} sm={6}>\r\n                    <Form.Group>\r\n                      <label>From</label>\r\n                      <div className='full-width'>\r\n                        <Form.Control type=\"date\" value={this.state.day_start} required onChange={e => this.setState({ day_start: e.target.value })}>\r\n                        </Form.Control>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={12} sm={6}>\r\n                    <Form.Group>\r\n                      <label>To</label>\r\n                      <div className='full-width'>\r\n                        <Form.Control type=\"date\" value={this.state.day_end} required onChange={e => this.setState({ day_end: e.target.value })}>\r\n                        </Form.Control>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs=\"12\">\r\n                    <Form.Group>\r\n                      <label>Student</label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={this.state.student}\r\n                        onChange={e => this.setState({ student: e.target.value })}\r\n                      >\r\n                        <option value='_all_'>All</option>\r\n                        { this.state.students.map(student => (\r\n                          <option key={student._id} value={student._id}>{student.firstname} {student.lastname}</option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs=\"12\">\r\n                    <Form.Group>\r\n                      <label>Class</label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={this.state.sel_class}\r\n                        onChange={e => this.setState({ sel_class: e.target.value })}\r\n                      >\r\n                        <option value='_all_'>All</option>\r\n                        { this.state.classes.map(item => (\r\n                          <option key={item._id} value={item._id}>{item.name}</option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs=\"12\">\r\n                    <Form.Group>\r\n                      <label>Belt</label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={this.state.belt}\r\n                        onChange={e => this.setState({ belt: e.target.value })}\r\n                      >\r\n                        <option value='_all_'>All</option>\r\n                        { this.state.belts.map(item => (\r\n                          <option key={item._id} value={item._id}>{item.name}</option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col xs=\"12\" sm=\"6\" md=\"4\">\r\n                <Row className=\"mt-3\">\r\n                  <Col xs=\"12\">\r\n                    <Form.Check \r\n                      type='radio'\r\n                      label='All Attendance'\r\n                      name='report_type'\r\n                      checked={this.state.report_type === 'all'}\r\n                      onChange={e => this.setState({ report_type: 'all' })}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"12\">\r\n                    <Form.Check \r\n                      type='radio'\r\n                      label='Late to class'\r\n                      name='report_type'\r\n                      checked={this.state.report_type === 'late'}\r\n                      onChange={e => this.setState({ report_type: 'late' })}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"12\">\r\n                    <Form.Check \r\n                      type='radio'\r\n                      label='Attending wrong class'\r\n                      name='report_type'\r\n                      checked={this.state.report_type === 'wrong'}\r\n                      onChange={e => this.setState({ report_type: 'wrong' })}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"12\">\r\n                    <Form.Check \r\n                      type='radio'\r\n                      label='Missed a class'\r\n                      name='report_type'\r\n                      checked={this.state.report_type === 'missed'}\r\n                      onChange={e => this.setState({ report_type: 'missed' })}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"12\" style={{ paddingLeft: 40 }}>\r\n                    <Form.Group>\r\n                      <Form.Label style={{ textTransform: 'capitalize' }}>Consecutive classes missed</Form.Label>\r\n                      <Form.Control disabled={this.state.report_type !== 'missed'} \r\n                      min=\"1\" type=\"number\"\r\n                      value={this.state.consecutive} \r\n                      onChange={e => this.setState({ consecutive: e.target.value })} />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs=\"12\" className='d-flex align-items-end mt-4'>\r\n                    <Form.Group>\r\n                      <Button className=\"btn-fill mr-2\" variant='secondary' onClick={this.handleClickView}>View</Button>\r\n                      <Button className=\"btn-fill\" variant='info' onClick={this.handleExport}>Export</Button>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col xs=\"12\">\r\n                <div className=\"separator mt-2 mb-4\"></div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>Student Attendance Report \r\n                  <br/>{type_titles[this.state.gen_report_type]}{' '}\r\n                  {this.state.gen_report_type === 'missed' ? `${this.state.gen_consecutive} consecutive ` : ''}\r\n                  {!!this.state.gen_student_name ? `Student: ${this.state.gen_student_name} ` : ''}\r\n                  {!!this.state.gen_belt ? `Belt: ${this.state.gen_belt} ` : ''}\r\n                  {!!this.state.gen_class ? `Class: ${this.state.gen_class} ` : ''}\r\n                  ({moment(this.state.gen_day_start).format('MM/DD/YYYY')} - {moment(this.state.gen_day_end).format('MM/DD/YYYY')})\r\n                </p>\r\n                <Table bordered>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Student</th>\r\n                      <th>Belt</th>\r\n                      <th>Date</th>\r\n                      <th>Class</th>\r\n                      { this.state.gen_report_type !== 'missed' ?  <th></th> : null }\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.filtered.map((row, idx) => (\r\n                        <tr key={'row_'+idx}>\r\n                          <td>{row.student.firstname} {row.student.lastname}</td>\r\n                          <td>{row.belt}</td>\r\n                          <td>{moment(row.createdAt).format('MM/DD/YYYY')}</td>\r\n                          <td>{row.class_name}</td>\r\n                          { this.state.gen_report_type !== 'missed' ?  <td>{row.is_late && row.is_wrong ? '**Late Wrong class' : row.is_late ? '**Late' : row.is_wrong ? '**Wrong class' : ''}</td> : null }\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ReportStudent;\r\n","import Student from \"./views/Students\";\nimport Addstudent from \"./views/Students/add\";\nimport Editstudent from \"./views/Students/edit\";\nimport StudentAddclass from \"./views/Students/addclass\";\nimport Staff from \"./views/Staffs\";\nimport Addstaff from \"./views/Staffs/add\";\nimport Editstaff from \"./views/Staffs/edit\";\nimport StaffSchedule from \"./views/Staffs/schedule\";\nimport Class from \"./views/Classes\";\nimport Addclass from \"./views/Classes/add\";\nimport Editclass from \"./views/Classes/edit\";\nimport DailyClass from \"./views/Classes/daily\";\nimport ClassCalendar from \"./views/Classes/calendar\";\nimport ClassSchedule from \"./views/Classes/schedule\";\nimport Belt from \"./views/Belt\";\nimport Dashboard from \"./views/Dashboard\";\nimport ReportStudent from \"./views/Report/student\";\nimport ReportStaff from \"./views/Report/staff\";\nimport ReportBirthday from \"./views/Report/birthday\";\nimport ReportContract from \"./views/Report/contract\";\n\nconst dashboardRoutes = [\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"nc-icon nc-alien-33\",\n  //   component: Upgrade,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/dashboard\",\n  //   name: \"Dashboard\",\n  //   icon: \"nc-icon nc-chart-pie-35\",\n  //   component: Dashboard,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: StudentAddclass,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/addclass'\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Addstudent,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/add'\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Editstudent,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/edit'\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Student,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/staff\",\n    name: \"Staff\",\n    icon: \"nc-icon nc-circle-09\",\n    component: Addstaff,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/add'\n  },\n  {\n    path: \"/staff\",\n    name: \"Staff\",\n    icon: \"nc-icon nc-circle-09\",\n    component: Editstaff,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/edit'\n  },\n  {\n    path: \"/staff\",\n    name: \"Staff\",\n    icon: \"nc-icon nc-circle-09\",\n    component: StaffSchedule,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/schedule'\n  },\n  {\n    path: \"/staff\",\n    name: \"Staff\",\n    icon: \"nc-icon nc-circle-09\",\n    component: Staff,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/class\",\n    name: \"Class\",\n    icon: \"nc-icon nc-notes\",\n    component: Addclass,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/add'\n  },\n  {\n    path: \"/class\",\n    name: \"Class\",\n    icon: \"nc-icon nc-notes\",\n    component: Editclass,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/edit'\n  },{\n    path: \"/class\",\n    name: \"Class\",\n    icon: \"nc-icon nc-notes\",\n    component: DailyClass,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/daily'\n  },{\n    path: \"/class\",\n    name: \"Class\",\n    icon: \"nc-icon nc-notes\",\n    component: ClassCalendar,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/calendar'\n  },{\n    path: \"/class\",\n    name: \"Class\",\n    icon: \"nc-icon nc-notes\",\n    component: ClassSchedule,\n    layout: \"/admin\",\n    hidden: true,\n    additional: '/schedule'\n  },{\n    path: \"/class\",\n    name: \"Class\",\n    icon: \"nc-icon nc-notes\",\n    component: Class,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/belt\",\n    name: \"Belt Setup\",\n    icon: \"nc-icon nc-paper-2\",\n    component: Belt,\n    hidden: true,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/report\",\n    name: \"Reports\",\n    icon: \"nc-icon nc-atom\",\n    component: ReportStudent,\n    hidden: true,\n    layout: \"/admin\",\n    additional: '/student'\n  },\n  {\n    path: \"/report\",\n    name: \"Reports\",\n    icon: \"nc-icon nc-atom\",\n    component: ReportStaff,\n    hidden: true,\n    layout: \"/admin\",\n    additional: '/staff'\n  },\n  {\n    path: \"/report\",\n    name: \"Reports\",\n    icon: \"nc-icon nc-atom\",\n    component: ReportBirthday,\n    hidden: true,\n    layout: \"/admin\",\n    additional: '/birthday'\n  },\n  {\n    path: \"/report\",\n    name: \"Reports\",\n    icon: \"nc-icon nc-atom\",\n    component: ReportContract,\n    hidden: true,\n    layout: \"/admin\",\n    additional: '/contract'\n  },\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n// react-bootstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getMinutes, getWithExpiry, lowerBoundIndex, minutes2TimeString } from \"../../function\";\r\n\r\nclass ReportStaff extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      staffs: [],\r\n      staff: '',\r\n      logs: [],\r\n      filtered: [],\r\n      day_start: moment().format('YYYY-MM-DD'),\r\n      day_end: moment().format('YYYY-MM-DD'),\r\n      token_info: getWithExpiry('token_info'),\r\n\r\n      staff_name: '',\r\n      gen_day_start: moment().format('YYYY-MM-DD'),\r\n      gen_day_end: moment().format('YYYY-MM-DD'),\r\n      gen_total: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    postRequest(URLS.staff_getall, { token: this.state.token_info })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        let data = res.data.result;\r\n        this.setState({ staffs: data, staff: data[0]?._id, staff_name: data[0]?.name });\r\n        this.fetchStaffData(data[0]?._id);\r\n      } else {\r\n        console.log(res.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onStaffChanged = (s) => {\r\n    this.setState({ staff: s })\r\n    this.fetchStaffData(s);\r\n  }\r\n\r\n  fetchStaffData = (s_id) => {\r\n    let staff_id = s_id || this.state.staff;\r\n    postRequest(URLS.check_staff_get, { token: this.state.token_info, staff: staff_id })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        this.setState({ logs: res.data.result });\r\n      } else {\r\n        this.showMessage(res.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  handleClickView = () => {\r\n    if (this.state.day_start.localeCompare(this.state.day_end) > 0) {\r\n      this.setState({ filtered: [] });\r\n      return;\r\n    }\r\n\r\n    let date_start = moment(this.state.day_start).toISOString();\r\n    let date_end = moment(this.state.day_end).add(1, 'days').toISOString();\r\n    const comp_func = (a, b) => a.localeCompare(b)\r\n\r\n    let lo = lowerBoundIndex(this.state.logs, 'createdAt', date_start, comp_func);\r\n    let hi = lowerBoundIndex(this.state.logs, 'createdAt', date_end, comp_func);\r\n    let staff = this.state.staffs.find(st => st._id === this.state.staff);\r\n    let total = 0;\r\n    let filtered = this.state.logs.slice(lo, hi).map(log => {\r\n      let arr = log.schedules.map(sc => ({\r\n        date: moment(log.createdAt).format('MM/DD/YYYY'),\r\n        day: moment(log.createdAt).format('dddd'),\r\n        interval: sc.time_start + ' - ' + sc.time_end,\r\n        class_name: sc.class_name,\r\n        total: minutes2TimeString(getMinutes(sc.time_end)-getMinutes(sc.time_start))\r\n      }))\r\n      if (!!log.additional && log.additional.time_start.localeCompare(log.additional.time_end) < 0)\r\n      {\r\n        arr.push({\r\n          date: moment(log.createdAt).format('MM/DD/YYYY'),\r\n          day: moment(log.createdAt).format('dddd'),\r\n          interval: log.additional.time_start + ' - ' + log.additional.time_end,\r\n          class_name: 'None',\r\n          total: minutes2TimeString(getMinutes(log.additional.time_end)-getMinutes(log.additional.time_start))\r\n        })\r\n      }\r\n      total += log.total_time;\r\n      return arr;\r\n    });\r\n\r\n    filtered = filtered.flat().sort((a, b) => {\r\n      if (!a.date.localeCompare(b.date)) {\r\n        return a.interval.localeCompare(b.interval);\r\n      }\r\n      return a.date.localeCompare(b.date);\r\n    })\r\n    this.setState({ \r\n      filtered,\r\n      gen_day_start: this.state.day_start,\r\n      gen_day_end: this.state.day_end,\r\n      staff_name: staff?.name,\r\n      gen_total: total\r\n    });\r\n  }\r\n\r\n  handleExport = () => {\r\n    const options = { \r\n      filename: 'Staff Attendance',\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalSeparator: '.',\r\n      showLabels: true, \r\n      showTitle: true,\r\n      title: 'Staff Attendance\\n' + this.state.staff_name + ' (' + moment(this.state.day_start).format('MM/DD/YYYY') + ' - ' + moment(this.state.day_end).format('MM/DD/YYYY') + ')',\r\n      useTextFile: false,\r\n      useBom: true,\r\n      headers: ['Date', 'Day', 'In/Out', 'Class', 'Total']\r\n    };\r\n\r\n    const csvExporter = new ExportToCsv(options);\r\n    let data = Object.assign([], this.state.filtered);\r\n    data.push({ date: '', day: '', interval: '', class_name: 'Total', total: minutes2TimeString(this.state.gen_total) });\r\n    csvExporter.generateCsv(data);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title className=\"mb-2\">\r\n              Display Staff Attendance\r\n            </Card.Title>\r\n            <Row>\r\n              <Col xs={12} sm={6} lg={3}>\r\n                <Form.Group>\r\n                  <label>From</label>\r\n                  <div className='full-width'>\r\n                    <Form.Control type=\"date\" value={this.state.day_start} required onChange={e => this.setState({ day_start: e.target.value })}>\r\n                    </Form.Control>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm={6} lg={3}>\r\n                <Form.Group>\r\n                  <label>To</label>\r\n                  <div className='full-width'>\r\n                    <Form.Control type=\"date\" value={this.state.day_end} required onChange={e => this.setState({ day_end: e.target.value })}>\r\n                    </Form.Control>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n                <Form.Group>\r\n                  <label>Staff</label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={this.state.staff}\r\n                    onChange={e => this.onStaffChanged(e.target.value)}\r\n                  >\r\n                    { this.state.staffs.map(staff => (\r\n                      <option key={staff._id} value={staff._id}>{staff.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm=\"6\" lg=\"3\" className='d-flex align-items-end'>\r\n                <Form.Group>\r\n                  <Button className=\"btn-fill mr-2\" variant='secondary' onClick={this.handleClickView}>View</Button>\r\n                  <Button className=\"btn-fill\" variant='info' onClick={this.handleExport}>Export</Button>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"separator mt-2 mb-4\"></div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>Staff Attendance Report <br/>{this.state.staff_name} ({moment(this.state.gen_day_start).format('MM/DD/YYYY')} - {moment(this.state.gen_day_end).format('MM/DD/YYYY')})</p>\r\n                <Table bordered>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      <th>Day</th>\r\n                      <th>In/Out</th>\r\n                      <th>Class</th>\r\n                      <th>Total</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.filtered.map((row, idx) => (\r\n                        <tr key={'row_'+idx}>\r\n                          <td>{row.date}</td>\r\n                          <td>{row.day}</td>\r\n                          <td>{row.interval}</td>\r\n                          <td>{row.class_name}</td>\r\n                          <td>{row.total}</td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>Total</td>\r\n                      <td>{minutes2TimeString(this.state.gen_total)}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ReportStaff;\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n// react-bootstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry, lowerBoundIndex } from \"../../function\";\r\n\r\nclass ReportBirthday extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      students: [],\r\n      filtered: [],\r\n      day_start: moment().format('YYYY-MM-DD'),\r\n      day_end: moment().format('YYYY-MM-DD'),\r\n      token_info: getWithExpiry('token_info')\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    postRequest(URLS.student_getall, { token: this.state.token_info })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        let data = res.data.result;\r\n        this.setState({ students: data.sort((a, b)  => {\r\n          let birthday_a = moment(a.birthday);\r\n          let birthday_b = moment(b.birthday);\r\n          if (birthday_a.month() !== birthday_b.month()) {\r\n            return birthday_a.month() - birthday_b.month();\r\n          } else {\r\n            return birthday_a.date() - birthday_b.date();\r\n          }\r\n        }) });\r\n      } else {\r\n        console.log(res.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  handleClickView = () => {\r\n    if (this.state.day_start.localeCompare(this.state.day_end) > 0) {\r\n      this.setState({ filtered: [] });\r\n      return;\r\n    }\r\n\r\n    let date_start = moment(this.state.day_start).toISOString();\r\n    let date_end = moment(this.state.day_end).add(1, 'days').toISOString();\r\n    const comp_func = (a, b) => {\r\n      if (moment(a).month() !== moment(b).month())\r\n        return moment(a).month() - moment(b).month();\r\n      return moment(a).date() - moment(b).date();\r\n    }\r\n\r\n    const change_year_func = (s, year) => {\r\n      let ns = Object.assign({}, s);\r\n      ns.birthday = moment(s.birthday).set('year', year); \r\n      return ns;\r\n    }\r\n\r\n    let lo = lowerBoundIndex(this.state.students, 'birthday', date_start, comp_func);\r\n    let hi = lowerBoundIndex(this.state.students, 'birthday', date_end, comp_func);\r\n    let year = moment(this.state.day_start).year();\r\n\r\n    if (moment(this.state.day_start).year() === moment(this.state.day_end).year()) {\r\n      // same year, choose between two dates\r\n      this.setState({ filtered: this.state.students.slice(lo, hi).map(s => change_year_func(s, year))});\r\n    }\r\n    else {\r\n      let filtered = this.state.students.slice(lo).map(s => change_year_func(s, year));\r\n      let year_end = moment(this.state.day_end).year();\r\n      for (let i = year+1; i<year_end; i++) {\r\n        let arr = this.state.students.map(s => change_year_func(s, i));\r\n        filtered = filtered.concat(arr);\r\n      }\r\n      filtered = filtered.concat(this.state.students.slice(0, hi).map(s => change_year_func(s, year_end)));\r\n      this.setState({ filtered });\r\n    }\r\n  }\r\n\r\n  handleExport = () => {\r\n    const options = { \r\n      filename: 'Birthday Report',\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalSeparator: '.',\r\n      showLabels: true, \r\n      showTitle: true,\r\n      title: 'Student Birthday Report (' + moment(this.state.day_start).format('MM/DD/YYYY') + ' - ' + moment(this.state.day_end).format('MM/DD/YYYY') + ')',\r\n      useTextFile: false,\r\n      useBom: true,\r\n      headers: ['Name', 'Birthday', 'Class']\r\n    };\r\n\r\n    const csvExporter = new ExportToCsv(options);\r\n    csvExporter.generateCsv(this.state.filtered.map(s => ({ \r\n      name: s.firstname + ' ' + s.lastname,\r\n      birthday: moment(s.birthday).format('MM/DD/YYYY'),\r\n      class_names: s.class_names\r\n    })));\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Card>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col xs={12} sm={4} md={3}>\r\n                <Form.Group>\r\n                  <label>From</label>\r\n                  <div className='full-width'>\r\n                    <Form.Control type=\"date\" value={this.state.day_start} required onChange={e => this.setState({ day_start: e.target.value })}>\r\n                    </Form.Control>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm={4} md={3}>\r\n                <Form.Group>\r\n                  <label>To</label>\r\n                  <div className='full-width'>\r\n                    <Form.Control type=\"date\" value={this.state.day_end} required onChange={e => this.setState({ day_end: e.target.value })}>\r\n                    </Form.Control>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm=\"4\" md=\"6\" className='d-flex align-items-end'>\r\n                <Form.Group>\r\n                  <Button className=\"btn-fill mr-2\" variant='secondary' onClick={this.handleClickView}>View</Button>\r\n                  <Button className=\"btn-fill\" variant='info' onClick={this.handleExport}>Export</Button>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"separator mt-2 mb-4\"></div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>Student Birthday Report ({moment(this.state.day_start).format('MM/DD/YYYY')} - {moment(this.state.day_end).format('MM/DD/YYYY')})</p>\r\n                <Table bordered>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>Birthday</th>\r\n                      <th>Class</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.filtered.map((row, idx) => (\r\n                        <tr key={'row_'+idx}>\r\n                          <td>{row.firstname} {row.lastname}</td>\r\n                          <td>{moment(row.birthday).format('MM/DD/YYYY')}</td>\r\n                          <td>{row.class_names}</td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ReportBirthday;\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n// react-bootstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { store } from 'react-notifications-component';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { getWithExpiry, lowerBoundIndex } from \"../../function\";\r\n\r\nclass ReportContract extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      students: [],\r\n      filtered: [],\r\n      day_start: moment().format('YYYY-MM-DD'),\r\n      day_end: moment().format('YYYY-MM-DD'),\r\n      token_info: getWithExpiry('token_info')\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    postRequest(URLS.student_getall, { token: this.state.token_info })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        let data = res.data.result;\r\n        this.setState({ students: data.sort((a, b)  => a.date_end.localeCompare(b.date_end))});\r\n      } else {\r\n        console.log(res.data.message);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  handleClickView = () => {\r\n    if (this.state.day_start.localeCompare(this.state.day_end) > 0) {\r\n      this.setState({ filtered: [] });\r\n      return;\r\n    }\r\n\r\n    let date_start = moment(this.state.day_start).toISOString();\r\n    let date_end = moment(this.state.day_end).add(1, 'days').toISOString();\r\n    const comp_func = (a, b) => a.localeCompare(b)\r\n\r\n    let lo = lowerBoundIndex(this.state.students, 'date_end', date_start, comp_func);\r\n    let hi = lowerBoundIndex(this.state.students, 'date_end', date_end, comp_func);\r\n    let year = moment(this.state.day_start).year();\r\n\r\n    this.setState({ filtered: this.state.students.slice(lo, hi)});\r\n  }\r\n\r\n  handleExport = () => {\r\n    const options = { \r\n      filename: 'Contract Report',\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalSeparator: '.',\r\n      showLabels: true, \r\n      showTitle: true,\r\n      title: 'Contract Report (' + moment(this.state.day_start).format('MM/DD/YYYY') + ' - ' + moment(this.state.day_end).format('MM/DD/YYYY') + ')',\r\n      useTextFile: false,\r\n      useBom: true,\r\n      headers: ['Name', 'Belt', 'Expires']\r\n    };\r\n\r\n    const csvExporter = new ExportToCsv(options);\r\n    csvExporter.generateCsv(this.state.filtered.map(s => ({ \r\n      name: s.firstname + ' ' + s.lastname,\r\n      belts: s.belts,\r\n      date_end: moment(s.date_end).format('MM/DD/YYYY'),\r\n    })));\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Card>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col xs={12} sm={4} md={3}>\r\n                <Form.Group>\r\n                  <label>From</label>\r\n                  <div className='full-width'>\r\n                    <Form.Control type=\"date\" value={this.state.day_start} required onChange={e => this.setState({ day_start: e.target.value })}>\r\n                    </Form.Control>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm={4} md={3}>\r\n                <Form.Group>\r\n                  <label>To</label>\r\n                  <div className='full-width'>\r\n                    <Form.Control type=\"date\" value={this.state.day_end} required onChange={e => this.setState({ day_end: e.target.value })}>\r\n                    </Form.Control>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm=\"4\" md=\"6\" className='d-flex align-items-end'>\r\n                <Form.Group>\r\n                  <Button className=\"btn-fill mr-2\" variant='secondary' onClick={this.handleClickView}>View</Button>\r\n                  <Button className=\"btn-fill\" variant='info' onClick={this.handleExport}>Export</Button>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"separator mt-2 mb-4\"></div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>Contract Report ({moment(this.state.day_start).format('MM/DD/YYYY')} - {moment(this.state.day_end).format('MM/DD/YYYY')})</p>\r\n                <Table bordered>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>Belt</th>\r\n                      <th>Expires</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.filtered.map((row, idx) => (\r\n                        <tr key={'row_'+idx}>\r\n                          <td>{row.firstname} {row.lastname}</td>\r\n                          <td>{row.belts}</td>\r\n                          <td>{moment(row.date_end).format('MM/DD/YYYY')}</td>\r\n                        </tr>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ReportContract;\r\n","import React, { Component } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar, Container, Nav, Dropdown, Button } from \"react-bootstrap\";\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\n\nimport routes from \"../../routes.js\";\nimport { URLS, postRequest } from \"../../query.js\";\nimport { setWithExpiry, getWithExpiry } from \"../../function.js\";\n\nfunction Header({ setLoggedIn }) {\n  const location = useLocation();\n  const mobileSidebarToggle = (e) => {\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function () {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  };\n\n  const logout = (e) => {\n    e.preventDefault();\n    var token = getWithExpiry('token_info');\n    postRequest(URLS.logout, { token })\n    .then(resp => {\n      if (!resp.data.success)\n        console.log(resp);\n\n      setWithExpiry('token_info', '', -1000);\n      setLoggedIn(false);\n      window.location.href = '/admin/login';\n    }).catch(e => {\n      console.log(e);\n      setWithExpiry('token_info', '', -1000);\n      setLoggedIn(false);\n      window.location.href = '//admin/login';\n    });\n  }\n  const getBreadcrumbs = () => {\n    for (let i = 0; i < routes.length; i++) {\n      var fullpath = routes[i].layout + routes[i].path;\n      fullpath += routes[i].additional || '';\n      var loc = location.pathname.indexOf(fullpath);\n      if (loc != -1)\n      {\n        return {\n          main: routes[i].name,\n          path_main: routes[i].layout+routes[i].path,\n          additional: routes[i].additional ? routes[i].additional.substr(1) : undefined,\n          path_add: fullpath\n        }\n      }\n    }\n    return {\n      main: \"Brand\",\n      path_main: '/',\n    }\n  };\n\n  const breadcrumbs = getBreadcrumbs();\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" sticky>\n      <Container fluid>\n        <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\n          <Button\n            variant=\"dark\"\n            className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\n            onClick={mobileSidebarToggle}\n          >\n            <i className=\"fas fa-ellipsis-v\"></i>\n          </Button>\n          <Breadcrumb>\n            <Breadcrumb.Item href={breadcrumbs.path_main} active={!breadcrumbs.additional}>{ breadcrumbs.main }</Breadcrumb.Item>\n            {\n              breadcrumbs.additional && breadcrumbs.additional.length > 0 ?\n              <Breadcrumb.Item href={breadcrumbs.path_add} active>{ breadcrumbs.additional }</Breadcrumb.Item>\n              : null\n            }\n            \n          </Breadcrumb>\n        </div>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"nav mr-auto\" navbar>\n            {/* <Nav.Item>\n              <Nav.Link\n                data-toggle=\"dropdown\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n                className=\"m-0\"\n              >\n                <i className=\"nc-icon nc-palette\"></i>\n                <span className=\"d-lg-none ml-1\">Dashboard</span>\n              </Nav.Link>\n            </Nav.Item> */}\n            {/* <Dropdown as={Nav.Item}>\n              <Dropdown.Toggle\n                as={Nav.Link}\n                data-toggle=\"dropdown\"\n                id=\"dropdown-67443507\"\n                variant=\"default\"\n                className=\"m-0\"\n              >\n                <i className=\"nc-icon nc-planet\"></i>\n                <span className=\"notification\">5</span>\n                <span className=\"d-lg-none ml-1\">Notification</span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 1\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 2\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 3\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Notification 4\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Another notification\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            <Nav.Item>\n              <Nav.Link\n                className=\"m-0\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <i className=\"nc-icon nc-zoom-split\"></i>\n                <span className=\"d-lg-block\"> Search</span>\n              </Nav.Link>\n            </Nav.Item> */}\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n            {/* <Nav.Item>\n              <Nav.Link\n                className=\"m-0\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <span className=\"no-icon\">Account</span>\n              </Nav.Link>\n            </Nav.Item> */}\n            <Dropdown as={Nav.Item}>\n              <Dropdown.Toggle\n                aria-expanded={false}\n                aria-haspopup={true}\n                as={Nav.Link}\n                data-toggle=\"dropdown\"\n                id=\"navbarDropdownMenuLink\"\n                variant=\"default\"\n                className=\"m-0\"\n              >\n                <span className=\"no-icon\">Reports</span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu aria-labelledby=\"navbarDropdownMenuLink\">\n                <Dropdown.Item\n                  href=\"/admin/report/student\"\n                >\n                  Student Attendance\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"/admin/report/staff\"\n                >\n                  Staff Attendance\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"/admin/report/birthday\"\n                >\n                  Birthday\n                </Dropdown.Item>\n                <Dropdown.Item\n                  href=\"/admin/report/contract\"\n                >\n                  Contract Expiration\n                </Dropdown.Item>\n                {/* <div className=\"divider\"></div>\n                <Dropdown.Item\n                  href=\"#pablo\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Separated link\n                </Dropdown.Item> */}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Nav.Item>\n              <Nav.Link\n                className=\"m-0\"\n                href=\"#pablo\"\n                onClick={logout}\n              >\n                <span className=\"no-icon\">Log out</span>\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { useLocation, NavLink } from \"react-router-dom\";\n\nimport { Nav } from \"react-bootstrap\";\n\nfunction Sidebar({ color, image, routes }) {\n  const location = useLocation();\n  const activeRoute = (routeName) => {\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  return (\n    <div className=\"sidebar\" data-image={image} data-color={color}>\n      <div\n        className=\"sidebar-background\"\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n        }}\n      />\n      <div className=\"sidebar-wrapper\">\n        <div className=\"logo d-flex align-items-center justify-content-start\">\n          <div className=\"logo-img\">\n            <img\n              src={require(\"../../assets/img/logo.gif\").default}\n              alt=\"...\"\n            />\n          </div>\n          <a className=\"simple-text ml-2\" href=\"/\">\n            Martial Arts\n          </a>\n        </div>\n        <Nav>\n          {routes.map((prop, key) => {\n            if (!prop.redirect && !prop.hidden)\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            return null;\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Toast\r\n} from \"react-bootstrap\";\r\n\r\nimport { postRequest, URLS } from \"../../query\";\r\nimport { setWithExpiry } from \"../../function\";\r\n\r\nclass Login extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signing: true,\r\n      email_sign: '',\r\n      password_sign: '',\r\n\r\n      name: '',\r\n      password: '',\r\n      confirm_password: ''\r\n    }\r\n\r\n    this.signIn = this.signIn.bind(this);\r\n    this.register = this.register.bind(this);\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  signIn(e) {\r\n    var form = document.getElementById('form');\r\n    if (!form.checkValidity())\r\n    {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    postRequest(URLS.login, { name: this.state.name, password: this.state.password })\r\n    .then(resp => {\r\n      var data = resp.data;\r\n      if (!data.success) {\r\n        this.showMessage(data.message);\r\n      }\r\n      else {\r\n        setWithExpiry('token_info', data.token, 40000*1000)\r\n        this.props.setLoggedIn && this.props.setLoggedIn(true);\r\n        this.props.history.replace('/admin/students');\r\n      }\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n      this.showMessage(e.message);\r\n    })\r\n  }\r\n\r\n  register() {\r\n    postRequest(URLS.register, { \r\n      name: this.state.name,\r\n      password: this.state.password,\r\n      confirm_password: this.state.confirm_password\r\n    })\r\n    .then(resp => {\r\n      var data = resp.data;\r\n      if (!data.success) {\r\n        this.showMessage(data.message);\r\n      }\r\n      else {\r\n        setWithExpiry('token_info', data.token, 40000*1000)\r\n        this.props.history.replace('/admin/students');\r\n      }\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n      this.showMessage(e.message);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"vertical-centering-container\">\r\n        <ReactNotification />\r\n        <div style={{ marginTop: '10%'}} className='vertical-centering-container'>\r\n          <img src='/logo.gif' className=\"App-logo\" alt=\"logo\" />\r\n          <Card style={{ width: 320 }} className='mt-4'>\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: 'center' }}>Martial Arts Admin</Card.Title>\r\n            {/* {\r\n              this.state.signing ?  */}\r\n              <Form id='form'>\r\n                <Form.Group className='mt-4'>\r\n                  <label>Admin Name</label>\r\n                  <Form.Control\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={e => this.setState({ name: e.target.value })}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <label>Admin Password</label>\r\n                  <Form.Control\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={e => this.setState({ password: e.target.value })}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                  {/* <div style={{ fontSize: 12, marginTop: 12, display: \"flex\", alignItems: 'center' }}>\r\n                    Don't have account? \r\n                    <Button label='Create One' className='p-button-text' style={{ fontSize: 12 }} \r\n                    onClick={() => this.setState({ signing: false })} />\r\n                  </div> */}\r\n                <Button onClick={this.signIn} className=\"float-right btn-fill\" variant=\"primary\" type='submit'>Sign In</Button>\r\n                {/* : */}\r\n                {/* // <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: 'center' }}>\r\n                //   <span className='p-float-label' style={styles.full_width}>\r\n                //     <Form.Text id='firstname' style={styles.full_width} value={this.state.firstname} onChange={(e) => this.setState({ firstname: e.target.value })} />\r\n                //     <label htmlFor='firstname'>Firstname</label>\r\n                //   </span>\r\n                //   <span className='p-float-label' style={{ marginTop: 36, ...styles.full_width }}>\r\n                //     <Form.Text id='lastname' style={styles.full_width} value={this.state.lastname} onChange={(e) => this.setState({ lastname: e.target.value })} />\r\n                //     <label htmlFor='lastname'>Lastname</label>\r\n                //   </span>\r\n                //   <span className='p-float-label' style={{ marginTop: 36, ...styles.full_width }}>\r\n                //     <Form.Text id='inputEmailRegister' style={styles.full_width} value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })} />\r\n                //     <label htmlFor='inputEmailRegister'>Email</label>\r\n                //   </span>\r\n                //   <span className='p-float-label' style={{ marginTop: 36, ...styles.full_width }}>\r\n                //     <Form.Password id='inputPasswordRegister' style={styles.full_width} feedback={false}\r\n                //     value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })} />\r\n                //     <label htmlFor='inputPasswordRegister'>Password</label>\r\n                //   </span>\r\n                //   <span className='p-float-label' style={{ marginTop: 36, ...styles.full_width }}>\r\n                //     <Form.Password id='confirmpassword' style={styles.full_width} feedback={false}\r\n                //     value={this.state.confirm_password} onChange={(e) => this.setState({ confirm_password: e.target.value })} />\r\n                //     <label htmlFor='confirmpassword'>Confirm Password</label>\r\n                //   </span>\r\n                //   <Button label='Register' onClick={this.register} style={{ marginTop: 24 }} />\r\n                //   <div style={{ fontSize: 12, marginTop: 12, display: \"flex\", alignItems: 'center' }}>\r\n                //     Have already an account? \r\n                //     <Button label='Sign In' className='p-button-text' style={{ fontSize: 12 }} \r\n                //     onClick={() => this.setState({ signing: true })} />\r\n                //   </div>\r\n                // </div>\r\n              // } */}\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","export default __webpack_public_path__ + \"static/media/sidebar-5.109ea1af.jpg\";","import React, { Component, createRef } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ReactNotification from 'react-notifications-component'\nimport AdminNavbar from \"../components/Navbars/AdminNavbar\";\n// import Footer from \"../components/Footer/Footer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Login from '../views/Login';\nimport routes from \"../routes.js\";\n\nimport sidebarImage from \"../assets/img/sidebar-5.jpg\";\nimport { getWithExpiry } from \"../function\";\n\nclass Admin extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      logged_in: !!getWithExpiry('token_info'),\n      image: sidebarImage,\n      color: \"black\",\n      hasImage: true,\n    }\n\n    this.mainPanel = createRef();\n  }\n\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        var path = prop.layout + prop.path;\n        if (prop.additional) path += prop.additional; \n        return (\n          <Route\n            path={path}\n            exact={!prop.additional}\n            render={(props) => <prop.component {...props} />}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  componentDidMount() {\n    if (!this.state.logged_in) return;\n    \n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.mainPanel.current.scrollTop = 0;\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      var element = document.getElementById(\"bodyClick\");\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  setLoggedIn = (status) => {\n    this.setState({ logged_in: status });\n  }\n\n  render() {\n    let cur_path = window.location.pathname;\n    let logged_in = this.state.logged_in;\n\n    if (!logged_in && cur_path !== '/admin/login')\n      return <Redirect to=\"/admin/login\" />\n\n    return (\n      <div className=\"wrapper\">\n        <ReactNotification />\n        {\n          logged_in ?\n          <Sidebar color={this.state.color} image={this.state.hasImage ? this.state.image : \"\"} routes={routes} />\n          : null\n        }\n        <Switch>\n          <Route path=\"/admin/login\" render={(props) => <Login {...props} setLoggedIn={this.setLoggedIn} />} />\n          <div className=\"main-panel\" ref={this.mainPanel}>\n            {\n              logged_in ? <AdminNavbar setLoggedIn={this.setLoggedIn} /> : null\n            }\n            <div className=\"content\">\n              {this.getRoutes(routes)}\n            </div>\n            {/* <Footer /> */}\n          </div>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nfunction MainNavbar() {\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\" className=\"d-flex\">\r\n        <img src=\"/logo.png\" alt=\"\" />\r\n        <div>\r\n          <strong>BH Martial Arts</strong>\r\n          <p style={{ fontSize: 12, marginBottom: 0 }}>Attendance Tracking</p>\r\n        </div>\r\n        \r\n      </Navbar.Brand>\r\n      {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n          <Nav.Link href=\"#link\">Link</Nav.Link>\r\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse> */}\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default MainNavbar;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport ReactNotification, { store } from 'react-notifications-component'\r\nimport {\r\n  Container, Row, Col, Form\r\n} from \"react-bootstrap\";\r\n\r\nimport { URLS } from \"../../query\";\r\nimport MainNavbar from \"../../components/Navbars/Navbar\";\r\n\r\nclass Home extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current_time: moment().format(\"HH : mm : ss\"),\r\n      location: localStorage.getItem('location') || '',\r\n      locations: [],\r\n      schedules: []\r\n    }\r\n    this.timerInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let self = this;\r\n    this.timerInterval = setInterval(() => {\r\n      self.setState({ current_time: moment().format(\"HH : mm : ss\")})\r\n    }, 1000);\r\n\r\n    axios.post(URLS.location_getall)\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        let state = { locations: res.data.result }\r\n        if (!this.state.location && res.data.result.length) {\r\n          state.location = res.data.result[0]._id;\r\n          localStorage.setItem('location', state.location);\r\n          this.fetchSchedules(state.location);\r\n        } else {\r\n          this.fetchSchedules();\r\n        }\r\n        this.setState(state);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timerInterval)\r\n      clearInterval(this.timerInterval);\r\n  }\r\n\r\n  showMessage = (msg) => {\r\n    store.addNotification({\r\n      title: \"Error\",\r\n      message: msg,\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeLocation = (e) => {\r\n    this.setState({ location: e.target.value });\r\n    localStorage.setItem('location', e.target.value);\r\n    this.fetchSchedules(e.target.value);\r\n  }\r\n\r\n  fetchSchedules = (location) => {\r\n    let loc_id = location || this.state.location;\r\n    if (!loc_id) {\r\n      console.log(\"location cannot be null\");\r\n      return;\r\n    }\r\n\r\n    axios.post(URLS.schedule_gettoday, { loc_id })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        this.setState({ schedules: res.data.result })\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let current = moment().format('HH:mm');\r\n\r\n    return (\r\n      <>\r\n        <MainNavbar />\r\n        <ReactNotification />\r\n        <div className=\"content-wrapper\">\r\n          <Container className=\"mt-4\">\r\n            <Row>\r\n              <Col xs={12} sm={8}>\r\n                <div className=\"py-2 d-flex justify-content-around\">Today is <span style={{ fontWeight: 500 }}>{moment().format('dddd, MM/DD/YYYY')}</span></div>\r\n                <div className=\"my-4 d-flex align-items-center justify-content-around\">Current Time: <span style={{ backgroundColor: '#19A463', color: 'white', fontSize: 24, padding: '2px 12px' }}>{this.state.current_time}</span></div>\r\n              </Col>\r\n              <Col xs={12} sm={4}>\r\n                <Form.Control as=\"select\" value={this.state.location} className=\"mb-3\"\r\n                onChange={this.onChangeLocation}>\r\n                  {\r\n                    this.state.locations.map(loc => (\r\n                      <option key={loc._id} value={loc._id}>{loc.name}</option>\r\n                    ))\r\n                  }\r\n                </Form.Control>\r\n                <NavLink to=\"/select/student\" className='w-100 btn btn-outline-secondary'>\r\n                  Touch here for Student Check In\r\n                </NavLink>\r\n                <NavLink to=\"/select/staff\" className='my-3 ml-auto w-100 btn btn-outline-secondary'>\r\n                  Touch here for Staff Check In              \r\n                </NavLink>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"text-center w-100 mt-4\" style={{ fontWeight: 'bold' }}>Schedule for check in</div>\r\n              <Col>\r\n                <table className=\"w-100 mt-4\">\r\n                  <tbody>\r\n                  {\r\n                    this.state.schedules.map(sc => (\r\n                      <tr key={sc._id} className={current.localeCompare(sc.time_end) > 0 ? 'd-none' : ''}>\r\n                        <td><strong>{sc.class_name}</strong></td>\r\n                        <td>{sc.time_start}-{sc.time_end}</td>\r\n                        <td className=\"text-italic\">{current.localeCompare(sc.time_start) >= 0 ? 'In progress' : 'Coming up' }</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport { Form, Container, Button, Row, Col } from 'react-bootstrap';\r\nimport ReactNotification from 'react-notifications-component'\r\n\r\nimport MainNavbar from \"../../components/Navbars/Navbar\";\r\nimport { postRequest, URLS } from '../../query';\r\n\r\nconst SelectStaff = ({ history }) => {\r\n  const [staffList, setStaffList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, []);\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  const fetchList = () => {\r\n    let loc_id = localStorage.getItem('location');\r\n    postRequest(URLS.staff_getall, { loc_id, for: 'front' })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        let list = res.data.result;\r\n        setStaffList(list);\r\n      }\r\n    }, e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <MainNavbar />\r\n    <ReactNotification />\r\n    <div className='content-wrapper'>\r\n      <Container className=\"mt-3\">\r\n        <Row>\r\n          <Col className=\"d-flex align-items-center mb-4\">\r\n            <h5>Staff Checkin</h5>\r\n            <Button variant=\"outline-secondary\" className=\"ml-auto\" onClick={goBack}>Start Over</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {staffList.map(s => (\r\n            <Col key={s._id} xs={12} sm={6} md={4}>\r\n              <NavLink to={'/check/staff?id='+s._id} ><strong>{s.name}</strong></NavLink>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(SelectStaff);","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport { Form, Container, Button, Row, Col } from 'react-bootstrap';\r\nimport ReactNotification from 'react-notifications-component'\r\n\r\nimport MainNavbar from \"../../components/Navbars/Navbar\";\r\nimport { postRequest, URLS } from '../../query';\r\n\r\nconst SelectStudent = ({ history }) => {\r\n  const [firstCharacter, setFirstCharacter] = useState('A');\r\n  const [studentList, setStudentList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, []);\r\n\r\n  const onChangeFirstCharacter = (c) => {\r\n    if (c !== firstCharacter) {\r\n      setFirstCharacter(c);\r\n      setFilteredList(studentList.filter(s => s.firstname[0].toUpperCase() === c));\r\n    }\r\n  }\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  const fetchList = () => {\r\n    let loc_id = localStorage.getItem('location');\r\n    postRequest(URLS.student_getall, { loc_id, for: 'front', is_active: true })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        let list = res.data.result;\r\n        setStudentList(list);\r\n        setFilteredList(list.filter(s => s.firstname[0].toUpperCase() === firstCharacter));\r\n      }\r\n    }, e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <MainNavbar />\r\n    <ReactNotification />\r\n    <div className='content-wrapper'>\r\n      <Container className=\"mt-3\">\r\n        <Row>\r\n          <Col className=\"d-flex align-items-center mb-4\">\r\n            <h5>What letter does your first name begin with?</h5>\r\n            <Button variant=\"outline-secondary\" className=\"ml-auto\" onClick={goBack}>Start Over</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-md-none\">\r\n            <Form.Control as=\"select\" value={firstCharacter} className=\"mb-3 w-100\"\r\n            onChange={e => onChangeFirstCharacter(e.target.value)}>\r\n              {\r\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map(c => (\r\n                  <option key={c} value={c}>{c}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n          </Col>\r\n          <Col className=\"d-none d-md-block\">\r\n          {\r\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map(c => (\r\n              <Button key={c} variant=\"outline-secondary\" className='mx-2 mb-3 px-0' \r\n              style={{ width: 44, height: 44 }}\r\n              active={c === firstCharacter}\r\n              onClick={() => onChangeFirstCharacter(c)}>\r\n                {c}\r\n              </Button>\r\n            ))\r\n          }\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <table className=\"w-100\">\r\n            <tbody>\r\n              {filteredList.map(s => (\r\n                <tr key={s._id}>\r\n                  <td><NavLink to={'/check/student?id='+s._id} ><strong>{s.firstname} {s.lastname}</strong></NavLink></td>\r\n                  <td>{s.belts}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(SelectStudent);","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactNotification, { store } from 'react-notifications-component'\r\n\r\nimport MainNavbar from \"../../components/Navbars/Navbar\";\r\nimport { postRequest, URLS } from '../../query';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { getMinutes } from '../../function';\r\n\r\nconst CheckStaff = ({ history }) => {\r\n  const [info, setInfo] = useState({});\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [start, setStart] = useState('00:00');\r\n  const [stop, setStop] = useState('00:00');\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let loc_id = localStorage.getItem('location');\r\n    let staff_id = '';\r\n    let searchParams = new URLSearchParams(window.location.search);\r\n    searchParams.has('id') && (staff_id = searchParams.get('id'));\r\n\r\n    Promise.all([postRequest(URLS.staff_get, { loc_id, for: 'front', _id: staff_id }),\r\n                postRequest(URLS.schedule_gettoday, { loc_id })]) \r\n    .then(([res1, res2]) => {\r\n      if (res1.data.success) {\r\n        setInfo(res1.data.result);\r\n      }\r\n      if (res2.data.success) {\r\n        setSchedules(res2.data.result);\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }, []);\r\n\r\n  const handleCheckboxClicked = (id, checked) => {\r\n    let new_selected = Object.assign([], selectedIds);\r\n\r\n    if (checked && new_selected.indexOf(id) === -1) {\r\n      new_selected.push(id);\r\n    } else if (!checked && new_selected.indexOf(id) !== -1) {\r\n      new_selected.splice(new_selected.indexOf(id), 1);\r\n    }\r\n    setSelectedIds(new_selected);\r\n  }\r\n\r\n  const handleCheck = () => {\r\n    let total_time = getMinutes(stop) - getMinutes(start);\r\n    if (total_time < 0) {\r\n      showMessage('Invalid additional time interval.')\r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n    let works = [];\r\n    for (let schedule of schedules) {\r\n      if (selectedIds.indexOf(schedule._id) !== -1 ) {\r\n        works.push({ _id: schedule._id, class_name: schedule.class_name, time_start: schedule.time_start, time_end: schedule.time_end });\r\n        let interval = getMinutes(schedule.time_end) - getMinutes(schedule.time_start);\r\n        total_time += interval;\r\n      }\r\n    }\r\n\r\n    postRequest(URLS.check_staff_add, {\r\n      staff: info._id,\r\n      schedules: works,\r\n      additional: { time_start: start, time_end: stop },\r\n      total_time\r\n    }).then(res => {\r\n      setProcessing(false);\r\n      if (res.data.success) {\r\n        showMessage('Success', '', 'success');\r\n        setTimeout(() => {\r\n          history.replace('/')\r\n        }, 1000);\r\n      } else {\r\n        showMessage(res.data.message);\r\n      }\r\n    }, e => {\r\n      console.log(e);\r\n      setProcessing(false);\r\n      showMessage('Failed to check.');\r\n    })\r\n  }\r\n\r\n  const showMessage = (msg, title, type) => {\r\n    store.addNotification({\r\n      title: title === undefined ? \"Error\" : title,\r\n      message: msg,\r\n      type: type || \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <MainNavbar />\r\n    <ReactNotification />\r\n    <Container className=\"mt-4\">\r\n      <Row>\r\n        <Col xs={12}>\r\n        <h5>Hello <strong>{info.name}</strong>! Select the class you will be instructing or enter start/stop times then click CHECK IN.</h5>\r\n        </Col>\r\n        <Col xs={12} sm={6} md={7}>\r\n          {\r\n            schedules.map(sc => (\r\n              <div key={sc._id}>\r\n                <input type='checkbox' className=\"mr-2\" onChange={(e) => handleCheckboxClicked(sc._id, e.target.checked)} />\r\n                <label>{sc.class_name} ({sc.time_start} - {sc.time_end})</label>\r\n              </div>\r\n            ))\r\n          }\r\n          {\r\n            schedules.length === 0\r\n            ? 'No schedule today'\r\n            : null\r\n          }\r\n        </Col>\r\n        <Col xs={12} sm={6} md={5}>\r\n          <Form.Group>\r\n            <label>Start</label>\r\n            <Form.Control type=\"time\" step=\"60\" value={start} onChange={e => setStart(e.target.value)}>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <label>Stop</label>\r\n            <Form.Control type=\"time\" step=\"60\" value={stop} onChange={e => setStop(e.target.value)}>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button variant=\"outline-secondary\" disabled={processing} onClick={handleCheck}>Check in</Button>\r\n          <Button variant=\"outline-secondary\" className=\"ml-2\" onClick={() => history.replace('/')}>Start Over</Button>\r\n        </Col>\r\n        {/* <Col xs={12} sm={6} md={5} className=\"mt-2\" >\r\n        </Col> */}\r\n      </Row>\r\n    </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(CheckStaff);","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactNotification, { store } from 'react-notifications-component'\r\n\r\nimport MainNavbar from \"../../components/Navbars/Navbar\";\r\nimport { postRequest, URLS } from '../../query';\r\nimport moment from 'moment';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst CheckStudent = ({ history }) => {\r\n  const [info, setInfo] = useState({});\r\n  const [schedule, setSchedule] = useState(null);\r\n  const [isWrong, setIsWrong] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let loc_id = localStorage.getItem('location');\r\n    let searchParams = new URLSearchParams(window.location.search);\r\n    let stud_id = '';\r\n    searchParams.has('id') && (stud_id = searchParams.get('id'));\r\n\r\n    Promise.all([postRequest(URLS.student_get, { loc_id, _id: stud_id, for: 'front' }),\r\n                postRequest(URLS.schedule_gettoday, { loc_id })])\r\n    .then(([res1, res2]) => {\r\n      let schedule_ids = [];\r\n\r\n      if (res1.data.success)\r\n      {\r\n        var data = res1.data.result;\r\n        var student = {\r\n          _id: data._id,\r\n          firstname: data.firstname,\r\n          lastname: data.lastname,\r\n          birthday: moment(data.birthday).format(\"YYYY-MM-DD\"),\r\n          is_active: data.is_active,\r\n          image_url: URLS.base_url + data.avatar,\r\n          is_trial: data.is_trial,\r\n          levels: data.levels,\r\n          attendance: data.attendance || [],\r\n        };\r\n\r\n        for (let sc of student.attendance)\r\n        {\r\n          schedule_ids = schedule_ids.concat(sc.schedules);\r\n        }\r\n        setInfo(student);\r\n      }\r\n      else\r\n      {\r\n        showMessage(res1.data.message);\r\n      }\r\n\r\n      if (res2.data.success) {\r\n        let current = moment().format('HH:mm');\r\n        let list = res2.data.result;\r\n        list = list.filter(sc => current.localeCompare(sc.time_end) < 0 );\r\n        let subscribed_list = list.filter(sc => schedule_ids.indexOf(sc._id) !== -1);\r\n        if (subscribed_list.length) {\r\n          setSchedule(subscribed_list[0]);\r\n          setIsWrong(false);\r\n        } else if (list.length) {\r\n          setSchedule(list[0]);\r\n          setIsWrong(true);\r\n        }\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n  }, []);\r\n\r\n  const handleCheck = () => {\r\n    postRequest(URLS.check_student_add, {\r\n      student: info._id,\r\n      class_id: schedule.class_id,\r\n      class_name: schedule.class_name,\r\n      schedule_id: schedule._id,\r\n      is_wrong: isWrong\r\n    }).then(res => {\r\n      if (res.data.success) {\r\n        showMessage('Success', '', 'success');\r\n        setTimeout(() => {\r\n          history.replace('/')\r\n        }, 1000);\r\n      } else {\r\n        showMessage(res.data.message);\r\n      }\r\n    }, e => {\r\n      console.log(e);\r\n      showMessage('Failed to check.');\r\n    })\r\n  }\r\n\r\n  const showMessage = (msg, title, type) => {\r\n    store.addNotification({\r\n      title: title === undefined ? \"Error\" : title,\r\n      message: msg,\r\n      type: type || \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 3000,\r\n        // onScreen: true\r\n      }\r\n    });\r\n  }\r\n\r\n  console.log('09:45'.localeCompare('10:00'), moment().format('HH:mm'))\r\n\r\n  return (\r\n    <>\r\n    <MainNavbar />\r\n    <ReactNotification />\r\n    <Container className=\"mt-4\">\r\n      <Row>\r\n        <Col xs={12} sm={4}>\r\n          <img src={info.image_url} className=\"w-100 mb-4\"/>\r\n        </Col>\r\n        <Col xs={12} sm={8} md={4}>\r\n          <h5><strong>{info.firstname} {info.lastname}</strong> is checking in for class:</h5>\r\n          <span>\r\n            {\r\n              schedule ?\r\n              schedule.class_name\r\n              : 'No upcoming class today.'\r\n            }\r\n          </span>\r\n          <div>\r\n            <span style={{ color: '#ff2333', fontSize: 14, fontStyle: 'italic' }} className={schedule && schedule.time_start.localeCompare(moment().format('HH:mm')) <= 0 ? 'mr-2' : 'd-none'}><strong>Late</strong></span>\r\n            <span style={{ color: '#FED800', fontSize: 14, fontStyle: 'italic' }} className={isWrong ? '' : 'd-none'}><strong>Wrong</strong></span>\r\n          </div>\r\n          <Button variant=\"outline-secondary\" className=\"w-100 mt-2\" disabled={!schedule} onClick={handleCheck}>Check in</Button>\r\n          <Button variant=\"outline-secondary\" className=\"w-100 mt-2\" onClick={() => history.replace('/')}>Start Over</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(CheckStudent);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/scss/dashboard.scss?v=2.0.0\";\nimport \"./assets/css/demo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-notifications-component/dist/theme.css'\n\nimport AdminLayout from \"./layouts/Admin.js\";\nimport Home from './views/Home';\nimport SelectStaff from './views/Select/staff';\nimport SelectStudent from './views/Select/student';\nimport CheckStaff from './views/Check/staff';\nimport CheckStudent from './views/Check/student';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n      <Route exact path=\"/\" component={Home} />\n      <Route path='/select/staff' component={SelectStaff} />\n      <Route path='/select/student' component={SelectStudent} />\n      <Route path='/check/staff' component={CheckStaff} />\n      <Route path='/check/student' component={CheckStudent} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}